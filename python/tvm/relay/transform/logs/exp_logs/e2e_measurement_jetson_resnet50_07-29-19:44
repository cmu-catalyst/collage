2021-07-29 19:44:55,951:[ERROR] (Loaded network, Shape array) = (resnet50, [('input0', [1, 64, 56, 56])])
2021-07-29 19:44:56,743:[MYINFO] [Python side] Run two-level optimization
2021-07-29 19:44:56,812:[MYINFO] # of relay nodes in comp graph: 169
2021-07-29 19:44:56,812:[MYINFO] Cost configurations loaded
2021-07-29 19:44:57,415:[MYINFO] Computation graph created
2021-07-29 19:44:57,417:[MYINFO] Optimizer created
2021-07-29 19:44:57,723:[MYINFO] =============================================
2021-07-29 19:44:57,724:[MYINFO] (topo_order, op_type) : 0, nn.relu
2021-07-29 19:44:57,730:[MYINFO] The following pattern is matched:
2021-07-29 19:44:57,730:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:44:57,732:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,732:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:57,732:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:57,734:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:57,734:[MYINFO] Cost of subgraph : 0.123017
2021-07-29 19:44:57,734:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,734:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,734:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:57,734:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:57,736:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:57,736:[MYINFO] Cost of subgraph : 0.061084
2021-07-29 19:44:57,736:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,743:[MYINFO] The following pattern is matched:
2021-07-29 19:44:57,743:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:44:57,747:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,748:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:57,748:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:57,754:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:57,754:[MYINFO] Cost of subgraph : 1.140179
2021-07-29 19:44:57,755:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,755:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,755:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:57,755:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:57,761:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:57,761:[MYINFO] Cost of subgraph : 0.605589
2021-07-29 19:44:57,761:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,762:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,762:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:57,762:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:57,768:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:57,768:[MYINFO] Cost of subgraph : 1.140179
2021-07-29 19:44:57,768:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,768:[MYINFO] ---------------------------------------------
2021-07-29 19:44:57,769:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:57,769:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:57,774:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:57,775:[MYINFO] Cost of subgraph : 0.605589
2021-07-29 19:44:57,775:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,080:[MYINFO] =============================================
2021-07-29 19:44:58,081:[MYINFO] (topo_order, op_type) : 1, add
2021-07-29 19:44:58,084:[MYINFO] The following pattern is matched:
2021-07-29 19:44:58,085:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:44:58,087:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,087:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:58,087:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:58,088:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,088:[MYINFO] Cost of subgraph : 0.099887
2021-07-29 19:44:58,089:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,089:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,089:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:58,089:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:58,090:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,090:[MYINFO] Cost of subgraph : 0.033915
2021-07-29 19:44:58,090:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,091:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,091:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:58,091:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:58,092:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,092:[MYINFO] Cost of subgraph : 0.099887
2021-07-29 19:44:58,092:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,093:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,093:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:58,093:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:58,094:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,094:[MYINFO] Cost of subgraph : 0.033915
2021-07-29 19:44:58,094:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,109:[MYINFO] The following pattern is matched:
2021-07-29 19:44:58,110:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:44:58,113:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,113:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:58,114:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:58,119:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,119:[MYINFO] Cost of subgraph : 0.791652
2021-07-29 19:44:58,119:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,120:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,120:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:58,120:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:58,125:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,126:[MYINFO] Cost of subgraph : 0.605374
2021-07-29 19:44:58,126:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,126:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,126:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:58,126:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:58,132:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,132:[MYINFO] Cost of subgraph : 0.791652
2021-07-29 19:44:58,132:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,132:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,132:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:58,133:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:44:58,138:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,138:[MYINFO] Cost of subgraph : 0.605374
2021-07-29 19:44:58,138:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,555:[MYINFO] =============================================
2021-07-29 19:44:58,556:[MYINFO] (topo_order, op_type) : 2, nn.conv2d
2021-07-29 19:44:58,558:[MYINFO] The following pattern is matched:
2021-07-29 19:44:58,559:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:44:58,561:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,561:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:44:58,561:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:44:58,567:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,567:[MYINFO] Cost of subgraph : 0.617237
2021-07-29 19:44:58,567:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,567:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,567:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:58,567:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:44:58,573:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,573:[MYINFO] Cost of subgraph : 0.620164
2021-07-29 19:44:58,573:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,573:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,573:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:58,574:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0e3748), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:44:58,579:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,579:[MYINFO] Cost of subgraph : 0.598593
2021-07-29 19:44:58,579:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,861:[MYINFO] =============================================
2021-07-29 19:44:58,862:[MYINFO] (topo_order, op_type) : 3, nn.relu
2021-07-29 19:44:58,865:[MYINFO] The following pattern is matched:
2021-07-29 19:44:58,866:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:44:58,867:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,868:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:58,868:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:44:58,869:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,869:[MYINFO] Cost of subgraph : 0.088842
2021-07-29 19:44:58,869:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,869:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,870:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:58,870:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:44:58,871:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,871:[MYINFO] Cost of subgraph : 0.016880
2021-07-29 19:44:58,871:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,875:[MYINFO] The following pattern is matched:
2021-07-29 19:44:58,875:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:44:58,878:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,878:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:58,878:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e3cb8), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:44:58,884:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,884:[MYINFO] Cost of subgraph : 0.882161
2021-07-29 19:44:58,884:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,884:[MYINFO] ---------------------------------------------
2021-07-29 19:44:58,884:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:58,884:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e3cb8), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:44:58,890:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:58,890:[MYINFO] Cost of subgraph : 0.538641
2021-07-29 19:44:58,890:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,170:[MYINFO] =============================================
2021-07-29 19:44:59,171:[MYINFO] (topo_order, op_type) : 4, nn.conv2d
2021-07-29 19:44:59,174:[MYINFO] The following pattern is matched:
2021-07-29 19:44:59,174:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:44:59,176:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,177:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:44:59,177:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e3cb8), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:44:59,182:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,182:[MYINFO] Cost of subgraph : 1.807123
2021-07-29 19:44:59,182:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,183:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,183:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:59,183:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e3cb8), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:44:59,188:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,188:[MYINFO] Cost of subgraph : 0.867413
2021-07-29 19:44:59,188:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,188:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,189:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:59,189:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e3cb8), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:44:59,194:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,194:[MYINFO] Cost of subgraph : 0.539165
2021-07-29 19:44:59,194:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,479:[MYINFO] =============================================
2021-07-29 19:44:59,480:[MYINFO] (topo_order, op_type) : 5, nn.relu
2021-07-29 19:44:59,484:[MYINFO] The following pattern is matched:
2021-07-29 19:44:59,484:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:44:59,486:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,486:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:59,486:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:44:59,487:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,487:[MYINFO] Cost of subgraph : 0.088842
2021-07-29 19:44:59,488:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,488:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,488:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:59,488:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:44:59,489:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,489:[MYINFO] Cost of subgraph : 0.016880
2021-07-29 19:44:59,489:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,493:[MYINFO] The following pattern is matched:
2021-07-29 19:44:59,493:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:44:59,496:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,496:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:59,496:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e10f8), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:44:59,502:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,502:[MYINFO] Cost of subgraph : 0.585801
2021-07-29 19:44:59,502:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,502:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,502:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:59,502:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e10f8), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:44:59,508:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,508:[MYINFO] Cost of subgraph : 0.742008
2021-07-29 19:44:59,508:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,787:[MYINFO] =============================================
2021-07-29 19:44:59,788:[MYINFO] (topo_order, op_type) : 6, nn.conv2d
2021-07-29 19:44:59,791:[MYINFO] The following pattern is matched:
2021-07-29 19:44:59,791:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:44:59,793:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,794:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:44:59,794:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e10f8), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])
2021-07-29 19:44:59,799:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,799:[MYINFO] Cost of subgraph : 0.817811
2021-07-29 19:44:59,800:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,800:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,800:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:44:59,800:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e10f8), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])
2021-07-29 19:44:59,805:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,805:[MYINFO] Cost of subgraph : 0.593719
2021-07-29 19:44:59,805:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,806:[MYINFO] ---------------------------------------------
2021-07-29 19:44:59,806:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:44:59,806:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e10f8), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])
2021-07-29 19:44:59,811:[ERROR] REUSED RESULT!!!!
2021-07-29 19:44:59,811:[MYINFO] Cost of subgraph : 0.741800
2021-07-29 19:44:59,811:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,092:[MYINFO] =============================================
2021-07-29 19:45:00,092:[MYINFO] (topo_order, op_type) : 7, nn.relu
2021-07-29 19:45:00,096:[MYINFO] The following pattern is matched:
2021-07-29 19:45:00,097:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:00,098:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,099:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:00,099:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,100:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,100:[MYINFO] Cost of subgraph : 0.123017
2021-07-29 19:45:00,100:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,100:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,100:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:00,101:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,102:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,102:[MYINFO] Cost of subgraph : 0.061084
2021-07-29 19:45:00,102:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,108:[MYINFO] The following pattern is matched:
2021-07-29 19:45:00,108:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:00,113:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,113:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:00,113:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,124:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,124:[MYINFO] Cost of subgraph : 1.140179
2021-07-29 19:45:00,125:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,125:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,125:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:00,125:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,131:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,131:[MYINFO] Cost of subgraph : 0.605589
2021-07-29 19:45:00,131:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,131:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,132:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:00,132:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,137:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,138:[MYINFO] Cost of subgraph : 1.140179
2021-07-29 19:45:00,138:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,138:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,138:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:00,138:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,144:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,144:[MYINFO] Cost of subgraph : 0.605589
2021-07-29 19:45:00,144:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,559:[MYINFO] =============================================
2021-07-29 19:45:00,560:[MYINFO] (topo_order, op_type) : 8, add
2021-07-29 19:45:00,563:[MYINFO] The following pattern is matched:
2021-07-29 19:45:00,564:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:00,565:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,566:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:00,566:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,567:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,567:[MYINFO] Cost of subgraph : 0.099887
2021-07-29 19:45:00,567:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,567:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,568:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:00,568:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,569:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,569:[MYINFO] Cost of subgraph : 0.033915
2021-07-29 19:45:00,569:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,570:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,570:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:00,570:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,571:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,571:[MYINFO] Cost of subgraph : 0.099887
2021-07-29 19:45:00,571:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,571:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,571:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:00,572:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,573:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,573:[MYINFO] Cost of subgraph : 0.033915
2021-07-29 19:45:00,573:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,588:[MYINFO] The following pattern is matched:
2021-07-29 19:45:00,589:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:00,592:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,592:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:00,592:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,598:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,598:[MYINFO] Cost of subgraph : 0.791652
2021-07-29 19:45:00,598:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,599:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,599:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:00,599:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,604:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,604:[MYINFO] Cost of subgraph : 0.605374
2021-07-29 19:45:00,604:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,605:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,605:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:00,605:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,611:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,611:[MYINFO] Cost of subgraph : 0.791652
2021-07-29 19:45:00,611:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,611:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,611:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:00,611:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:00,617:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,617:[MYINFO] Cost of subgraph : 0.605374
2021-07-29 19:45:00,617:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,882:[MYINFO] =============================================
2021-07-29 19:45:00,883:[MYINFO] (topo_order, op_type) : 9, nn.conv2d
2021-07-29 19:45:00,886:[MYINFO] The following pattern is matched:
2021-07-29 19:45:00,886:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:00,888:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,888:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:00,889:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:45:00,894:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,895:[MYINFO] Cost of subgraph : 0.617237
2021-07-29 19:45:00,895:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,895:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,895:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:00,895:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:45:00,900:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,900:[MYINFO] Cost of subgraph : 0.620164
2021-07-29 19:45:00,901:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,901:[MYINFO] ---------------------------------------------
2021-07-29 19:45:00,901:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:00,901:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe922938), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:45:00,906:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:00,906:[MYINFO] Cost of subgraph : 0.598593
2021-07-29 19:45:00,906:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,178:[MYINFO] =============================================
2021-07-29 19:45:01,178:[MYINFO] (topo_order, op_type) : 10, nn.relu
2021-07-29 19:45:01,182:[MYINFO] The following pattern is matched:
2021-07-29 19:45:01,183:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:01,185:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,185:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:01,185:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:01,186:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,186:[MYINFO] Cost of subgraph : 0.088842
2021-07-29 19:45:01,187:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,187:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,187:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:01,187:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:01,188:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,188:[MYINFO] Cost of subgraph : 0.016880
2021-07-29 19:45:01,188:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,192:[MYINFO] The following pattern is matched:
2021-07-29 19:45:01,192:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:01,195:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,195:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:01,195:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e1e58), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:01,201:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,201:[MYINFO] Cost of subgraph : 0.882161
2021-07-29 19:45:01,201:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,201:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,201:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:01,202:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e1e58), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:01,208:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,208:[MYINFO] Cost of subgraph : 0.538641
2021-07-29 19:45:01,208:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,482:[MYINFO] =============================================
2021-07-29 19:45:01,483:[MYINFO] (topo_order, op_type) : 11, nn.conv2d
2021-07-29 19:45:01,486:[MYINFO] The following pattern is matched:
2021-07-29 19:45:01,486:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:01,488:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,488:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:01,489:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e1e58), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:45:01,495:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,495:[MYINFO] Cost of subgraph : 1.807123
2021-07-29 19:45:01,495:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,495:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,495:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:01,495:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e1e58), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:45:01,501:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,501:[MYINFO] Cost of subgraph : 0.867413
2021-07-29 19:45:01,501:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,501:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,501:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:01,502:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0e1e58), [TensorType([1, 512, 7, 7], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:45:01,507:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,507:[MYINFO] Cost of subgraph : 0.539165
2021-07-29 19:45:01,507:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,777:[MYINFO] =============================================
2021-07-29 19:45:01,778:[MYINFO] (topo_order, op_type) : 12, nn.relu
2021-07-29 19:45:01,782:[MYINFO] The following pattern is matched:
2021-07-29 19:45:01,782:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:01,784:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,784:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:01,784:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:01,785:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,785:[MYINFO] Cost of subgraph : 0.088842
2021-07-29 19:45:01,786:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,786:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,786:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:01,786:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:01,787:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,787:[MYINFO] Cost of subgraph : 0.016880
2021-07-29 19:45:01,787:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,791:[MYINFO] The following pattern is matched:
2021-07-29 19:45:01,791:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:01,794:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,794:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:01,794:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e0498), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:01,800:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,800:[MYINFO] Cost of subgraph : 0.585801
2021-07-29 19:45:01,800:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,800:[MYINFO] ---------------------------------------------
2021-07-29 19:45:01,800:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:01,800:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e0498), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:01,806:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:01,806:[MYINFO] Cost of subgraph : 0.742008
2021-07-29 19:45:01,806:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,080:[MYINFO] =============================================
2021-07-29 19:45:02,081:[MYINFO] (topo_order, op_type) : 13, nn.conv2d
2021-07-29 19:45:02,084:[MYINFO] The following pattern is matched:
2021-07-29 19:45:02,084:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:02,087:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,087:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:02,087:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e0498), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])
2021-07-29 19:45:02,093:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,093:[MYINFO] Cost of subgraph : 0.817811
2021-07-29 19:45:02,093:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,093:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,094:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:02,094:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e0498), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])
2021-07-29 19:45:02,099:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,099:[MYINFO] Cost of subgraph : 0.593719
2021-07-29 19:45:02,099:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,099:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,100:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:02,100:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(weight, default, ty=TensorType([512, 2048, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e0498), [TensorType([1, 2048, 7, 7], float32), TensorType([512, 2048, 1, 1], float32)])
2021-07-29 19:45:02,105:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,105:[MYINFO] Cost of subgraph : 0.741800
2021-07-29 19:45:02,105:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,380:[MYINFO] =============================================
2021-07-29 19:45:02,381:[MYINFO] (topo_order, op_type) : 14, nn.relu
2021-07-29 19:45:02,384:[MYINFO] The following pattern is matched:
2021-07-29 19:45:02,385:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:02,387:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,387:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:02,387:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,388:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,388:[MYINFO] Cost of subgraph : 0.123017
2021-07-29 19:45:02,388:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,389:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,389:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:02,389:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,390:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,390:[MYINFO] Cost of subgraph : 0.061084
2021-07-29 19:45:02,390:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,396:[MYINFO] The following pattern is matched:
2021-07-29 19:45:02,397:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:02,401:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,401:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:02,401:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,407:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,408:[MYINFO] Cost of subgraph : 1.140179
2021-07-29 19:45:02,408:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,408:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,408:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:02,408:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,414:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,414:[MYINFO] Cost of subgraph : 0.605589
2021-07-29 19:45:02,414:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,414:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,415:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:02,415:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,420:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,421:[MYINFO] Cost of subgraph : 1.140179
2021-07-29 19:45:02,421:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,421:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,421:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:02,421:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])], (nullptr), [TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,427:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,427:[MYINFO] Cost of subgraph : 0.605589
2021-07-29 19:45:02,427:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,695:[MYINFO] =============================================
2021-07-29 19:45:02,695:[MYINFO] (topo_order, op_type) : 15, add
2021-07-29 19:45:02,699:[MYINFO] The following pattern is matched:
2021-07-29 19:45:02,699:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:02,701:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,701:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:02,702:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,703:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,703:[MYINFO] Cost of subgraph : 0.099887
2021-07-29 19:45:02,703:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,703:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,703:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:02,703:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,705:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,705:[MYINFO] Cost of subgraph : 0.033915
2021-07-29 19:45:02,705:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,705:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,705:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:02,705:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,707:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,707:[MYINFO] Cost of subgraph : 0.099887
2021-07-29 19:45:02,707:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,707:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,707:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:02,707:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 2048, 7, 7], float32)), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,708:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,708:[MYINFO] Cost of subgraph : 0.033915
2021-07-29 19:45:02,709:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,723:[MYINFO] The following pattern is matched:
2021-07-29 19:45:02,723:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:02,727:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,727:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:02,727:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,733:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,733:[MYINFO] Cost of subgraph : 0.791652
2021-07-29 19:45:02,733:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,733:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,733:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:02,733:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,739:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,739:[MYINFO] Cost of subgraph : 0.605374
2021-07-29 19:45:02,739:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,739:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,740:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:02,740:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,745:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,745:[MYINFO] Cost of subgraph : 0.791652
2021-07-29 19:45:02,745:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,746:[MYINFO] ---------------------------------------------
2021-07-29 19:45:02,746:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:02,746:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 2048, 7, 7], float32))], (nullptr), [TensorType([1, 2048, 7, 7], float32), TensorType([1, 2048, 7, 7], float32)])
2021-07-29 19:45:02,751:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:02,751:[MYINFO] Cost of subgraph : 0.605374
2021-07-29 19:45:02,752:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,145:[MYINFO] =============================================
2021-07-29 19:45:03,146:[MYINFO] (topo_order, op_type) : 16, nn.conv2d
2021-07-29 19:45:03,148:[MYINFO] The following pattern is matched:
2021-07-29 19:45:03,149:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:03,151:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,151:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:03,151:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([2048, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc1635a8), [TensorType([1, 1024, 14, 14], float32), TensorType([2048, 1024, 1, 1], float32)])
2021-07-29 19:45:03,156:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,157:[MYINFO] Cost of subgraph : 1.221276
2021-07-29 19:45:03,157:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,157:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,157:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:03,157:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([2048, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc1635a8), [TensorType([1, 1024, 14, 14], float32), TensorType([2048, 1024, 1, 1], float32)])
2021-07-29 19:45:03,162:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,162:[MYINFO] Cost of subgraph : 1.353490
2021-07-29 19:45:03,163:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,163:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,163:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:03,163:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([2048, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc1635a8), [TensorType([1, 1024, 14, 14], float32), TensorType([2048, 1024, 1, 1], float32)])
2021-07-29 19:45:03,168:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,168:[MYINFO] Cost of subgraph : 1.273787
2021-07-29 19:45:03,168:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,436:[MYINFO] =============================================
2021-07-29 19:45:03,436:[MYINFO] (topo_order, op_type) : 16, nn.conv2d
2021-07-29 19:45:03,439:[MYINFO] The following pattern is matched:
2021-07-29 19:45:03,439:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:03,441:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,441:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:03,442:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:45:03,447:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,447:[MYINFO] Cost of subgraph : 0.617237
2021-07-29 19:45:03,447:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,447:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,448:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:03,448:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:45:03,453:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,453:[MYINFO] Cost of subgraph : 0.620164
2021-07-29 19:45:03,453:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,453:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,453:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:03,453:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32)), Var(weight, default, ty=TensorType([2048, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91ef88), [TensorType([1, 512, 7, 7], float32), TensorType([2048, 512, 1, 1], float32)])
2021-07-29 19:45:03,459:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,459:[MYINFO] Cost of subgraph : 0.598593
2021-07-29 19:45:03,459:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,727:[MYINFO] =============================================
2021-07-29 19:45:03,728:[MYINFO] (topo_order, op_type) : 17, nn.relu
2021-07-29 19:45:03,731:[MYINFO] The following pattern is matched:
2021-07-29 19:45:03,732:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:03,733:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,734:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:03,734:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:03,735:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,735:[MYINFO] Cost of subgraph : 0.088842
2021-07-29 19:45:03,735:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,735:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,735:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:03,736:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 7, 7], float32))], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:03,737:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,737:[MYINFO] Cost of subgraph : 0.016880
2021-07-29 19:45:03,737:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,740:[MYINFO] The following pattern is matched:
2021-07-29 19:45:03,740:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:03,743:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,743:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:03,743:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc1636c8), [TensorType([1, 512, 14, 14], float32), TensorType([512, 512, 3, 3], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:03,749:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,749:[MYINFO] Cost of subgraph : 1.679705
2021-07-29 19:45:03,749:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,750:[MYINFO] ---------------------------------------------
2021-07-29 19:45:03,750:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:03,750:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc1636c8), [TensorType([1, 512, 14, 14], float32), TensorType([512, 512, 3, 3], float32)])], (nullptr), [TensorType([1, 512, 7, 7], float32)])
2021-07-29 19:45:03,755:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:03,755:[MYINFO] Cost of subgraph : 1.513371
2021-07-29 19:45:03,755:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,019:[MYINFO] =============================================
2021-07-29 19:45:04,020:[MYINFO] (topo_order, op_type) : 18, nn.conv2d
2021-07-29 19:45:04,022:[MYINFO] The following pattern is matched:
2021-07-29 19:45:04,023:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:04,025:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,025:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:04,025:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc1636c8), [TensorType([1, 512, 14, 14], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:45:04,030:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,031:[MYINFO] Cost of subgraph : 1.801665
2021-07-29 19:45:04,031:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,031:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,031:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:04,031:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc1636c8), [TensorType([1, 512, 14, 14], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:45:04,036:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,036:[MYINFO] Cost of subgraph : 1.619632
2021-07-29 19:45:04,037:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,037:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,037:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:04,037:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 512, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc1636c8), [TensorType([1, 512, 14, 14], float32), TensorType([512, 512, 3, 3], float32)])
2021-07-29 19:45:04,043:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,044:[MYINFO] Cost of subgraph : 1.511219
2021-07-29 19:45:04,044:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,317:[MYINFO] =============================================
2021-07-29 19:45:04,317:[MYINFO] (topo_order, op_type) : 19, nn.relu
2021-07-29 19:45:04,321:[MYINFO] The following pattern is matched:
2021-07-29 19:45:04,321:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:04,323:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,323:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:04,323:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 14, 14], float32))], (nullptr), [TensorType([1, 512, 14, 14], float32)])
2021-07-29 19:45:04,324:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,324:[MYINFO] Cost of subgraph : 0.085578
2021-07-29 19:45:04,325:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,325:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,325:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:04,325:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 14, 14], float32))], (nullptr), [TensorType([1, 512, 14, 14], float32)])
2021-07-29 19:45:04,326:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,326:[MYINFO] Cost of subgraph : 0.028718
2021-07-29 19:45:04,326:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,330:[MYINFO] The following pattern is matched:
2021-07-29 19:45:04,330:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:04,332:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,333:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:04,333:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9227e8), [TensorType([1, 1024, 14, 14], float32), TensorType([512, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 512, 14, 14], float32)])
2021-07-29 19:45:04,338:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,339:[MYINFO] Cost of subgraph : 0.886938
2021-07-29 19:45:04,339:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,339:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,339:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:04,339:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9227e8), [TensorType([1, 1024, 14, 14], float32), TensorType([512, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 512, 14, 14], float32)])
2021-07-29 19:45:04,345:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,345:[MYINFO] Cost of subgraph : 0.884194
2021-07-29 19:45:04,345:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,608:[MYINFO] =============================================
2021-07-29 19:45:04,609:[MYINFO] (topo_order, op_type) : 20, nn.conv2d
2021-07-29 19:45:04,611:[MYINFO] The following pattern is matched:
2021-07-29 19:45:04,612:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:04,613:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,614:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:04,614:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9227e8), [TensorType([1, 1024, 14, 14], float32), TensorType([512, 1024, 1, 1], float32)])
2021-07-29 19:45:04,619:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,620:[MYINFO] Cost of subgraph : 0.936106
2021-07-29 19:45:04,620:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,620:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,620:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:04,620:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9227e8), [TensorType([1, 1024, 14, 14], float32), TensorType([512, 1024, 1, 1], float32)])
2021-07-29 19:45:04,625:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,625:[MYINFO] Cost of subgraph : 0.885314
2021-07-29 19:45:04,626:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,626:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,626:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:04,626:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([512, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9227e8), [TensorType([1, 1024, 14, 14], float32), TensorType([512, 1024, 1, 1], float32)])
2021-07-29 19:45:04,631:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,631:[MYINFO] Cost of subgraph : 0.884450
2021-07-29 19:45:04,631:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,902:[MYINFO] =============================================
2021-07-29 19:45:04,903:[MYINFO] (topo_order, op_type) : 21, nn.relu
2021-07-29 19:45:04,906:[MYINFO] The following pattern is matched:
2021-07-29 19:45:04,906:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:04,908:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,908:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:04,908:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:04,910:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,910:[MYINFO] Cost of subgraph : 0.096750
2021-07-29 19:45:04,910:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,910:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,910:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:04,910:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:04,911:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,911:[MYINFO] Cost of subgraph : 0.050091
2021-07-29 19:45:04,912:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,917:[MYINFO] The following pattern is matched:
2021-07-29 19:45:04,918:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:04,922:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,922:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:04,922:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:04,931:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,931:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:04,932:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,932:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,932:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:04,932:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:04,939:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,939:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:04,939:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,939:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,939:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:04,940:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:04,945:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,945:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:04,945:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,946:[MYINFO] ---------------------------------------------
2021-07-29 19:45:04,946:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:04,946:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:04,952:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:04,952:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:04,952:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,219:[MYINFO] =============================================
2021-07-29 19:45:05,220:[MYINFO] (topo_order, op_type) : 22, add
2021-07-29 19:45:05,223:[MYINFO] The following pattern is matched:
2021-07-29 19:45:05,224:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:05,225:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,226:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:05,226:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:05,227:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,227:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:05,227:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,227:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,228:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:05,228:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:05,229:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,229:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:05,229:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,229:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,230:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:05,230:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:05,231:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,231:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:05,231:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,231:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,231:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:05,232:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:05,233:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,233:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:05,233:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,250:[MYINFO] The following pattern is matched:
2021-07-29 19:45:05,251:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:05,255:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,255:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:05,255:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:05,261:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,261:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:05,261:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,261:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,261:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:05,261:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:05,267:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,267:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:05,267:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,268:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,268:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:05,268:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:05,273:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,274:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:05,274:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,274:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,274:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:05,274:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:05,280:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,280:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:05,280:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,671:[MYINFO] =============================================
2021-07-29 19:45:05,672:[MYINFO] (topo_order, op_type) : 23, nn.conv2d
2021-07-29 19:45:05,674:[MYINFO] The following pattern is matched:
2021-07-29 19:45:05,675:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:05,677:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,677:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:05,677:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:05,682:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,683:[MYINFO] Cost of subgraph : 0.530108
2021-07-29 19:45:05,683:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,683:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,683:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:05,683:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:05,688:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,688:[MYINFO] Cost of subgraph : 0.505064
2021-07-29 19:45:05,689:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,689:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,689:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:05,689:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc348fa8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:05,694:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,694:[MYINFO] Cost of subgraph : 0.434962
2021-07-29 19:45:05,694:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,963:[MYINFO] =============================================
2021-07-29 19:45:05,964:[MYINFO] (topo_order, op_type) : 24, nn.relu
2021-07-29 19:45:05,968:[MYINFO] The following pattern is matched:
2021-07-29 19:45:05,968:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:05,970:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,970:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:05,970:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:05,971:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,971:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:05,971:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,972:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,972:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:05,972:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:05,973:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,973:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:05,973:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,976:[MYINFO] The following pattern is matched:
2021-07-29 19:45:05,977:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:05,979:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,980:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:05,980:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f7438), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:05,985:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,985:[MYINFO] Cost of subgraph : 0.534069
2021-07-29 19:45:05,985:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,986:[MYINFO] ---------------------------------------------
2021-07-29 19:45:05,986:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:05,986:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f7438), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:05,991:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:05,991:[MYINFO] Cost of subgraph : 0.476963
2021-07-29 19:45:05,992:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,256:[MYINFO] =============================================
2021-07-29 19:45:06,257:[MYINFO] (topo_order, op_type) : 25, nn.conv2d
2021-07-29 19:45:06,259:[MYINFO] The following pattern is matched:
2021-07-29 19:45:06,260:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:06,262:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,262:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:06,262:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f7438), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:06,267:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,267:[MYINFO] Cost of subgraph : 0.641369
2021-07-29 19:45:06,268:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,268:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,268:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:06,268:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f7438), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:06,273:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,273:[MYINFO] Cost of subgraph : 0.532690
2021-07-29 19:45:06,273:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,274:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,274:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:06,274:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f7438), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:06,279:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,279:[MYINFO] Cost of subgraph : 0.478502
2021-07-29 19:45:06,279:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,549:[MYINFO] =============================================
2021-07-29 19:45:06,550:[MYINFO] (topo_order, op_type) : 26, nn.relu
2021-07-29 19:45:06,553:[MYINFO] The following pattern is matched:
2021-07-29 19:45:06,554:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:06,555:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,556:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:06,556:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:06,557:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,557:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:06,557:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,557:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,557:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:06,557:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:06,559:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,559:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:06,559:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,562:[MYINFO] The following pattern is matched:
2021-07-29 19:45:06,562:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:06,565:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,565:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:06,565:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4758), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:06,571:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,571:[MYINFO] Cost of subgraph : 0.513306
2021-07-29 19:45:06,571:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,572:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,572:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:06,572:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4758), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:06,581:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,582:[MYINFO] Cost of subgraph : 0.562964
2021-07-29 19:45:06,582:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,861:[MYINFO] =============================================
2021-07-29 19:45:06,862:[MYINFO] (topo_order, op_type) : 27, nn.conv2d
2021-07-29 19:45:06,866:[MYINFO] The following pattern is matched:
2021-07-29 19:45:06,866:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:06,868:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,869:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:06,869:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4758), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:06,874:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,875:[MYINFO] Cost of subgraph : 0.516930
2021-07-29 19:45:06,875:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,875:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,875:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:06,875:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4758), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:06,881:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,881:[MYINFO] Cost of subgraph : 0.510106
2021-07-29 19:45:06,881:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,881:[MYINFO] ---------------------------------------------
2021-07-29 19:45:06,882:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:06,882:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4758), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:06,891:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:06,892:[MYINFO] Cost of subgraph : 0.562567
2021-07-29 19:45:06,892:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,168:[MYINFO] =============================================
2021-07-29 19:45:07,168:[MYINFO] (topo_order, op_type) : 28, nn.relu
2021-07-29 19:45:07,172:[MYINFO] The following pattern is matched:
2021-07-29 19:45:07,172:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:07,174:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,174:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:07,175:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,176:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,176:[MYINFO] Cost of subgraph : 0.096750
2021-07-29 19:45:07,176:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,176:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,176:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:07,176:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,178:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,178:[MYINFO] Cost of subgraph : 0.050091
2021-07-29 19:45:07,178:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,184:[MYINFO] The following pattern is matched:
2021-07-29 19:45:07,184:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:07,188:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,188:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:07,188:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,194:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,195:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:07,195:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,195:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,195:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:07,195:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,201:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,201:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:07,201:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,202:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,202:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:07,202:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,207:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,208:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:07,208:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,208:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,208:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:07,208:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,214:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,214:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:07,214:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,477:[MYINFO] =============================================
2021-07-29 19:45:07,478:[MYINFO] (topo_order, op_type) : 29, add
2021-07-29 19:45:07,481:[MYINFO] The following pattern is matched:
2021-07-29 19:45:07,481:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:07,483:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,483:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:07,484:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,485:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,485:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:07,485:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,485:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,485:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:07,485:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,487:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,487:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:07,487:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,487:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,487:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:07,487:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,489:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,489:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:07,489:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,489:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,489:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:07,489:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,490:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,490:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:07,491:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,503:[MYINFO] The following pattern is matched:
2021-07-29 19:45:07,504:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:07,507:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,507:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:07,507:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,513:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,513:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:07,513:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,513:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,513:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:07,514:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,519:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,519:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:07,519:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,520:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,520:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:07,520:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,525:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,525:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:07,526:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,526:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,526:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:07,526:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:07,532:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,532:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:07,532:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,927:[MYINFO] =============================================
2021-07-29 19:45:07,928:[MYINFO] (topo_order, op_type) : 30, nn.conv2d
2021-07-29 19:45:07,930:[MYINFO] The following pattern is matched:
2021-07-29 19:45:07,930:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:07,932:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,932:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:07,933:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:07,938:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,938:[MYINFO] Cost of subgraph : 0.530108
2021-07-29 19:45:07,938:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,938:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,939:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:07,939:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:07,944:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,944:[MYINFO] Cost of subgraph : 0.505064
2021-07-29 19:45:07,944:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,944:[MYINFO] ---------------------------------------------
2021-07-29 19:45:07,944:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:07,945:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xf3163e8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:07,950:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:07,950:[MYINFO] Cost of subgraph : 0.434962
2021-07-29 19:45:07,950:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,214:[MYINFO] =============================================
2021-07-29 19:45:08,215:[MYINFO] (topo_order, op_type) : 31, nn.relu
2021-07-29 19:45:08,218:[MYINFO] The following pattern is matched:
2021-07-29 19:45:08,218:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:08,220:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,220:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:08,220:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:08,221:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,221:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:08,222:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,222:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,222:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:08,222:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:08,223:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,223:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:08,223:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,227:[MYINFO] The following pattern is matched:
2021-07-29 19:45:08,227:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:08,230:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,230:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:08,230:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0df358), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:08,235:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,236:[MYINFO] Cost of subgraph : 0.534069
2021-07-29 19:45:08,236:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,236:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,236:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:08,236:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0df358), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:08,242:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,242:[MYINFO] Cost of subgraph : 0.476963
2021-07-29 19:45:08,242:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,504:[MYINFO] =============================================
2021-07-29 19:45:08,505:[MYINFO] (topo_order, op_type) : 32, nn.conv2d
2021-07-29 19:45:08,507:[MYINFO] The following pattern is matched:
2021-07-29 19:45:08,507:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:08,509:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,510:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:08,510:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0df358), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:08,515:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,515:[MYINFO] Cost of subgraph : 0.641369
2021-07-29 19:45:08,515:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,516:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,516:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:08,516:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0df358), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:08,521:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,521:[MYINFO] Cost of subgraph : 0.532690
2021-07-29 19:45:08,521:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,521:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,522:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:08,522:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd0df358), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:08,527:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,527:[MYINFO] Cost of subgraph : 0.478502
2021-07-29 19:45:08,527:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,789:[MYINFO] =============================================
2021-07-29 19:45:08,790:[MYINFO] (topo_order, op_type) : 33, nn.relu
2021-07-29 19:45:08,793:[MYINFO] The following pattern is matched:
2021-07-29 19:45:08,793:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:08,795:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,795:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:08,795:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:08,797:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,797:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:08,797:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,797:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,797:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:08,797:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:08,798:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,799:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:08,799:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,802:[MYINFO] The following pattern is matched:
2021-07-29 19:45:08,802:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:08,805:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,805:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:08,805:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921fa8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:08,811:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,811:[MYINFO] Cost of subgraph : 0.513306
2021-07-29 19:45:08,811:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,811:[MYINFO] ---------------------------------------------
2021-07-29 19:45:08,811:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:08,811:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921fa8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:08,817:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:08,817:[MYINFO] Cost of subgraph : 0.562964
2021-07-29 19:45:08,817:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,077:[MYINFO] =============================================
2021-07-29 19:45:09,078:[MYINFO] (topo_order, op_type) : 34, nn.conv2d
2021-07-29 19:45:09,081:[MYINFO] The following pattern is matched:
2021-07-29 19:45:09,081:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:09,083:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,083:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:09,083:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921fa8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:09,089:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,089:[MYINFO] Cost of subgraph : 0.516930
2021-07-29 19:45:09,089:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,089:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,089:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,089:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921fa8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:09,094:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,095:[MYINFO] Cost of subgraph : 0.510106
2021-07-29 19:45:09,095:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,095:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,095:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,095:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921fa8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:09,100:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,101:[MYINFO] Cost of subgraph : 0.562567
2021-07-29 19:45:09,101:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,364:[MYINFO] =============================================
2021-07-29 19:45:09,364:[MYINFO] (topo_order, op_type) : 35, nn.relu
2021-07-29 19:45:09,368:[MYINFO] The following pattern is matched:
2021-07-29 19:45:09,368:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:09,370:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,370:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,370:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,371:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,371:[MYINFO] Cost of subgraph : 0.096750
2021-07-29 19:45:09,371:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,371:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,372:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,372:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,373:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,373:[MYINFO] Cost of subgraph : 0.050091
2021-07-29 19:45:09,373:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,379:[MYINFO] The following pattern is matched:
2021-07-29 19:45:09,379:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:09,383:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,383:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,383:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,389:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,389:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:09,390:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,390:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,390:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,390:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,396:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,396:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:09,396:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,396:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,397:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,397:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,402:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,403:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:09,403:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,403:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,403:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,403:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,409:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,409:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:09,409:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,669:[MYINFO] =============================================
2021-07-29 19:45:09,669:[MYINFO] (topo_order, op_type) : 36, add
2021-07-29 19:45:09,672:[MYINFO] The following pattern is matched:
2021-07-29 19:45:09,673:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:09,675:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,675:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,675:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,676:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,676:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:09,676:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,677:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,677:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,677:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,678:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,678:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:09,678:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,679:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,679:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,679:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,680:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,680:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:09,680:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,680:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,680:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,681:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,682:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,682:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:09,682:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,694:[MYINFO] The following pattern is matched:
2021-07-29 19:45:09,694:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:09,697:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,698:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,698:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,703:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,703:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:09,704:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,704:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,704:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,704:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,709:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,710:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:09,710:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,710:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,710:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,710:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,716:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,716:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:09,716:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,716:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,716:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,716:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:09,722:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,722:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:09,722:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,973:[MYINFO] =============================================
2021-07-29 19:45:09,973:[MYINFO] (topo_order, op_type) : 37, nn.conv2d
2021-07-29 19:45:09,976:[MYINFO] The following pattern is matched:
2021-07-29 19:45:09,976:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:09,978:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,978:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:09,978:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:09,984:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,984:[MYINFO] Cost of subgraph : 0.530108
2021-07-29 19:45:09,984:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,984:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,984:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:09,984:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:09,990:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,990:[MYINFO] Cost of subgraph : 0.505064
2021-07-29 19:45:09,990:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,990:[MYINFO] ---------------------------------------------
2021-07-29 19:45:09,990:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:09,990:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe921208), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:09,995:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:09,996:[MYINFO] Cost of subgraph : 0.434962
2021-07-29 19:45:09,996:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,265:[MYINFO] =============================================
2021-07-29 19:45:10,265:[MYINFO] (topo_order, op_type) : 38, nn.relu
2021-07-29 19:45:10,268:[MYINFO] The following pattern is matched:
2021-07-29 19:45:10,269:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:10,270:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,271:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:10,271:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:10,272:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,272:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:10,272:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,272:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,273:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:10,273:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:10,274:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,274:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:10,274:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,277:[MYINFO] The following pattern is matched:
2021-07-29 19:45:10,277:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:10,280:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,280:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:10,280:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc347028), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:10,286:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,286:[MYINFO] Cost of subgraph : 0.534069
2021-07-29 19:45:10,286:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,286:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,286:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:10,286:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc347028), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:10,292:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,292:[MYINFO] Cost of subgraph : 0.476963
2021-07-29 19:45:10,292:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,685:[MYINFO] =============================================
2021-07-29 19:45:10,686:[MYINFO] (topo_order, op_type) : 39, nn.conv2d
2021-07-29 19:45:10,689:[MYINFO] The following pattern is matched:
2021-07-29 19:45:10,689:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:10,691:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,691:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:10,691:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc347028), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:10,696:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,697:[MYINFO] Cost of subgraph : 0.641369
2021-07-29 19:45:10,697:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,697:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,697:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:10,697:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc347028), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:10,702:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,702:[MYINFO] Cost of subgraph : 0.532690
2021-07-29 19:45:10,703:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,703:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,703:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:10,703:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc347028), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:10,708:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,708:[MYINFO] Cost of subgraph : 0.478502
2021-07-29 19:45:10,708:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,975:[MYINFO] =============================================
2021-07-29 19:45:10,976:[MYINFO] (topo_order, op_type) : 40, nn.relu
2021-07-29 19:45:10,979:[MYINFO] The following pattern is matched:
2021-07-29 19:45:10,979:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:10,981:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,981:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:10,982:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:10,983:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,983:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:10,983:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,983:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,983:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:10,984:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:10,985:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,985:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:10,985:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,988:[MYINFO] The following pattern is matched:
2021-07-29 19:45:10,988:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:10,991:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,991:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:10,991:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0df6b8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:10,997:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:10,997:[MYINFO] Cost of subgraph : 0.513306
2021-07-29 19:45:10,997:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,997:[MYINFO] ---------------------------------------------
2021-07-29 19:45:10,997:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:10,997:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0df6b8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:11,003:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,003:[MYINFO] Cost of subgraph : 0.562964
2021-07-29 19:45:11,003:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,267:[MYINFO] =============================================
2021-07-29 19:45:11,268:[MYINFO] (topo_order, op_type) : 41, nn.conv2d
2021-07-29 19:45:11,270:[MYINFO] The following pattern is matched:
2021-07-29 19:45:11,270:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:11,272:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,272:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:11,273:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0df6b8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:11,278:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,278:[MYINFO] Cost of subgraph : 0.516930
2021-07-29 19:45:11,278:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,278:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,279:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:11,279:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0df6b8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:11,284:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,284:[MYINFO] Cost of subgraph : 0.510106
2021-07-29 19:45:11,285:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,285:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,285:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:11,285:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0df6b8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:11,290:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,291:[MYINFO] Cost of subgraph : 0.562567
2021-07-29 19:45:11,291:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,553:[MYINFO] =============================================
2021-07-29 19:45:11,553:[MYINFO] (topo_order, op_type) : 42, nn.relu
2021-07-29 19:45:11,557:[MYINFO] The following pattern is matched:
2021-07-29 19:45:11,557:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:11,559:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,559:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:11,559:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,560:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,560:[MYINFO] Cost of subgraph : 0.096750
2021-07-29 19:45:11,561:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,561:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,561:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:11,561:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,562:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,562:[MYINFO] Cost of subgraph : 0.050091
2021-07-29 19:45:11,562:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,568:[MYINFO] The following pattern is matched:
2021-07-29 19:45:11,568:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:11,572:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,572:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:11,572:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,582:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,582:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:11,583:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,583:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,583:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:11,584:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,590:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,590:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:11,590:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,590:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,591:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:11,591:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,597:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,597:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:11,597:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,597:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,597:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:11,597:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,603:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,603:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:11,603:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,874:[MYINFO] =============================================
2021-07-29 19:45:11,874:[MYINFO] (topo_order, op_type) : 43, add
2021-07-29 19:45:11,878:[MYINFO] The following pattern is matched:
2021-07-29 19:45:11,878:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:11,880:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,880:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:11,880:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,882:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,882:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:11,882:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,882:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,882:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:11,882:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,884:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,884:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:11,884:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,884:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,884:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:11,884:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,886:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,886:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:11,886:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,886:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,886:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:11,886:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,887:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,888:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:11,888:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,900:[MYINFO] The following pattern is matched:
2021-07-29 19:45:11,900:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:11,903:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,904:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:11,904:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,914:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,914:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:11,914:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,914:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,915:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:11,915:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,920:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,920:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:11,921:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,921:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,921:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:11,921:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,927:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,927:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:11,927:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,927:[MYINFO] ---------------------------------------------
2021-07-29 19:45:11,927:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:11,927:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:11,933:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:11,933:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:11,933:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,191:[MYINFO] =============================================
2021-07-29 19:45:12,192:[MYINFO] (topo_order, op_type) : 44, nn.conv2d
2021-07-29 19:45:12,194:[MYINFO] The following pattern is matched:
2021-07-29 19:45:12,195:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:12,196:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,197:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:12,197:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:12,202:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,202:[MYINFO] Cost of subgraph : 0.530108
2021-07-29 19:45:12,202:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,203:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,203:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:12,203:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:12,208:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,208:[MYINFO] Cost of subgraph : 0.505064
2021-07-29 19:45:12,208:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,208:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,209:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:12,209:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe9259c8), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:12,214:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,214:[MYINFO] Cost of subgraph : 0.434962
2021-07-29 19:45:12,214:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,474:[MYINFO] =============================================
2021-07-29 19:45:12,475:[MYINFO] (topo_order, op_type) : 45, nn.relu
2021-07-29 19:45:12,478:[MYINFO] The following pattern is matched:
2021-07-29 19:45:12,479:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:12,480:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,481:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:12,481:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:12,482:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,482:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:12,482:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,482:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,482:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:12,482:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:12,484:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,484:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:12,484:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,487:[MYINFO] The following pattern is matched:
2021-07-29 19:45:12,487:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:12,489:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,490:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:12,490:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc15cbc8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:12,495:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,496:[MYINFO] Cost of subgraph : 0.534069
2021-07-29 19:45:12,496:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,496:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,496:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:12,496:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc15cbc8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:12,501:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,502:[MYINFO] Cost of subgraph : 0.476963
2021-07-29 19:45:12,502:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,762:[MYINFO] =============================================
2021-07-29 19:45:12,763:[MYINFO] (topo_order, op_type) : 46, nn.conv2d
2021-07-29 19:45:12,765:[MYINFO] The following pattern is matched:
2021-07-29 19:45:12,765:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:12,767:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,768:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:12,768:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc15cbc8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:12,773:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,773:[MYINFO] Cost of subgraph : 0.641369
2021-07-29 19:45:12,773:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,774:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,774:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:12,774:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc15cbc8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:12,779:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,779:[MYINFO] Cost of subgraph : 0.532690
2021-07-29 19:45:12,779:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,780:[MYINFO] ---------------------------------------------
2021-07-29 19:45:12,780:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:12,780:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc15cbc8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:12,785:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:12,785:[MYINFO] Cost of subgraph : 0.478502
2021-07-29 19:45:12,785:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,185:[MYINFO] =============================================
2021-07-29 19:45:13,186:[MYINFO] (topo_order, op_type) : 47, nn.relu
2021-07-29 19:45:13,188:[MYINFO] The following pattern is matched:
2021-07-29 19:45:13,189:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:13,190:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,191:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:13,191:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:13,192:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,192:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:13,192:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,192:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,193:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:13,193:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:13,194:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,194:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:13,194:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,197:[MYINFO] The following pattern is matched:
2021-07-29 19:45:13,197:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:13,200:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,200:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:13,200:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd5f8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:13,206:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,206:[MYINFO] Cost of subgraph : 0.513306
2021-07-29 19:45:13,206:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,206:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,206:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:13,206:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd5f8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:13,212:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,212:[MYINFO] Cost of subgraph : 0.562964
2021-07-29 19:45:13,212:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,469:[MYINFO] =============================================
2021-07-29 19:45:13,469:[MYINFO] (topo_order, op_type) : 48, nn.conv2d
2021-07-29 19:45:13,472:[MYINFO] The following pattern is matched:
2021-07-29 19:45:13,472:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:13,474:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,474:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:13,474:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd5f8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:13,479:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,480:[MYINFO] Cost of subgraph : 0.516930
2021-07-29 19:45:13,480:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,480:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,480:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:13,480:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd5f8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:13,486:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,486:[MYINFO] Cost of subgraph : 0.510106
2021-07-29 19:45:13,486:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,487:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,487:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:13,487:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd5f8), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:13,493:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,493:[MYINFO] Cost of subgraph : 0.562567
2021-07-29 19:45:13,493:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,754:[MYINFO] =============================================
2021-07-29 19:45:13,755:[MYINFO] (topo_order, op_type) : 49, nn.relu
2021-07-29 19:45:13,757:[MYINFO] The following pattern is matched:
2021-07-29 19:45:13,758:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:13,759:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,759:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:13,760:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:13,761:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,761:[MYINFO] Cost of subgraph : 0.096750
2021-07-29 19:45:13,761:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,761:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,761:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:13,762:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:13,763:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,763:[MYINFO] Cost of subgraph : 0.050091
2021-07-29 19:45:13,763:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,768:[MYINFO] The following pattern is matched:
2021-07-29 19:45:13,768:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:13,772:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,772:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:13,772:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:13,778:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,778:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:13,778:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,779:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,779:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:13,779:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:13,785:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,785:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:13,785:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,785:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,786:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:13,786:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:13,791:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,792:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:13,792:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,792:[MYINFO] ---------------------------------------------
2021-07-29 19:45:13,792:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:13,792:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:13,798:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:13,798:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:13,798:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,055:[MYINFO] =============================================
2021-07-29 19:45:14,056:[MYINFO] (topo_order, op_type) : 50, add
2021-07-29 19:45:14,059:[MYINFO] The following pattern is matched:
2021-07-29 19:45:14,059:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:14,061:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,061:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:14,061:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:14,063:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,063:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:14,063:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,063:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,063:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:14,063:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:14,064:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,064:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:14,065:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,065:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,065:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:14,065:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:14,066:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,067:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:14,067:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,067:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,067:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:14,067:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:14,068:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,068:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:14,068:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,079:[MYINFO] The following pattern is matched:
2021-07-29 19:45:14,079:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:14,082:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,082:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:14,082:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:14,088:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,088:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:14,088:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,088:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,088:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:14,088:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:14,094:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,094:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:14,094:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,095:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,095:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:14,095:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:14,100:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,100:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:14,100:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,101:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,101:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:14,101:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:14,106:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,106:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:14,107:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,364:[MYINFO] =============================================
2021-07-29 19:45:14,365:[MYINFO] (topo_order, op_type) : 51, nn.conv2d
2021-07-29 19:45:14,367:[MYINFO] The following pattern is matched:
2021-07-29 19:45:14,368:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:14,370:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,370:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:14,370:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:14,376:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,376:[MYINFO] Cost of subgraph : 0.530108
2021-07-29 19:45:14,376:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,376:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,377:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:14,377:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:14,382:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,382:[MYINFO] Cost of subgraph : 0.505064
2021-07-29 19:45:14,382:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,383:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,383:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:14,383:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15e058), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:14,388:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,388:[MYINFO] Cost of subgraph : 0.434962
2021-07-29 19:45:14,388:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,653:[MYINFO] =============================================
2021-07-29 19:45:14,654:[MYINFO] (topo_order, op_type) : 52, nn.relu
2021-07-29 19:45:14,656:[MYINFO] The following pattern is matched:
2021-07-29 19:45:14,657:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:14,658:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,658:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:14,659:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:14,660:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,660:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:14,660:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,660:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,660:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:14,660:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:14,661:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,662:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:14,662:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,665:[MYINFO] The following pattern is matched:
2021-07-29 19:45:14,665:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:14,667:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,667:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:14,668:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe9244d8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:14,673:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,673:[MYINFO] Cost of subgraph : 0.534069
2021-07-29 19:45:14,673:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,674:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,674:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:14,674:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe9244d8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:14,679:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,679:[MYINFO] Cost of subgraph : 0.476963
2021-07-29 19:45:14,679:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,938:[MYINFO] =============================================
2021-07-29 19:45:14,938:[MYINFO] (topo_order, op_type) : 53, nn.conv2d
2021-07-29 19:45:14,940:[MYINFO] The following pattern is matched:
2021-07-29 19:45:14,941:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:14,943:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,943:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:14,943:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe9244d8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:14,948:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,949:[MYINFO] Cost of subgraph : 0.641369
2021-07-29 19:45:14,949:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,949:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,949:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:14,949:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe9244d8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:14,954:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,954:[MYINFO] Cost of subgraph : 0.532690
2021-07-29 19:45:14,955:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,955:[MYINFO] ---------------------------------------------
2021-07-29 19:45:14,955:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:14,955:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe9244d8), [TensorType([1, 256, 14, 14], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:14,960:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:14,960:[MYINFO] Cost of subgraph : 0.478502
2021-07-29 19:45:14,960:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,360:[MYINFO] =============================================
2021-07-29 19:45:15,361:[MYINFO] (topo_order, op_type) : 54, nn.relu
2021-07-29 19:45:15,364:[MYINFO] The following pattern is matched:
2021-07-29 19:45:15,364:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:15,366:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,366:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:15,366:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:15,367:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,368:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:15,368:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,368:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,368:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:15,368:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:15,369:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,369:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:15,369:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,372:[MYINFO] The following pattern is matched:
2021-07-29 19:45:15,373:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:15,375:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,375:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:15,375:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc34be78), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:15,381:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,381:[MYINFO] Cost of subgraph : 0.513306
2021-07-29 19:45:15,381:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,381:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,382:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:15,382:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc34be78), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:15,387:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,387:[MYINFO] Cost of subgraph : 0.562964
2021-07-29 19:45:15,387:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,645:[MYINFO] =============================================
2021-07-29 19:45:15,646:[MYINFO] (topo_order, op_type) : 55, nn.conv2d
2021-07-29 19:45:15,648:[MYINFO] The following pattern is matched:
2021-07-29 19:45:15,648:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:15,650:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,650:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:15,650:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc34be78), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:15,656:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,656:[MYINFO] Cost of subgraph : 0.516930
2021-07-29 19:45:15,656:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,656:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,656:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:15,656:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc34be78), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:15,661:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,662:[MYINFO] Cost of subgraph : 0.510106
2021-07-29 19:45:15,662:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,662:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,662:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:15,662:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(weight, default, ty=TensorType([256, 1024, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc34be78), [TensorType([1, 1024, 14, 14], float32), TensorType([256, 1024, 1, 1], float32)])
2021-07-29 19:45:15,668:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,668:[MYINFO] Cost of subgraph : 0.562567
2021-07-29 19:45:15,668:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,927:[MYINFO] =============================================
2021-07-29 19:45:15,927:[MYINFO] (topo_order, op_type) : 56, nn.relu
2021-07-29 19:45:15,930:[MYINFO] The following pattern is matched:
2021-07-29 19:45:15,930:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:15,932:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,932:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:15,932:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:15,933:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,933:[MYINFO] Cost of subgraph : 0.096750
2021-07-29 19:45:15,934:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,934:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,934:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:15,934:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:15,935:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,935:[MYINFO] Cost of subgraph : 0.050091
2021-07-29 19:45:15,935:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,940:[MYINFO] The following pattern is matched:
2021-07-29 19:45:15,941:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:15,944:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,944:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:15,944:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:15,950:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,950:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:15,951:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,951:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,951:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:15,951:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:15,957:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,957:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:15,957:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,957:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,957:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:15,958:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:15,963:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,963:[MYINFO] Cost of subgraph : 0.494770
2021-07-29 19:45:15,963:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,964:[MYINFO] ---------------------------------------------
2021-07-29 19:45:15,964:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:15,964:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])], (nullptr), [TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:15,970:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:15,970:[MYINFO] Cost of subgraph : 0.448153
2021-07-29 19:45:15,970:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,230:[MYINFO] =============================================
2021-07-29 19:45:16,231:[MYINFO] (topo_order, op_type) : 57, add
2021-07-29 19:45:16,233:[MYINFO] The following pattern is matched:
2021-07-29 19:45:16,234:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:16,235:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,236:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:16,236:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:16,237:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,237:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:16,237:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,237:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,238:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:16,238:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:16,239:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,239:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:16,239:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,239:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,240:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:16,240:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:16,241:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,241:[MYINFO] Cost of subgraph : 0.113980
2021-07-29 19:45:16,241:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,241:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,241:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:16,241:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 1024, 14, 14], float32)), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:16,243:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,243:[MYINFO] Cost of subgraph : 0.060672
2021-07-29 19:45:16,243:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,252:[MYINFO] The following pattern is matched:
2021-07-29 19:45:16,253:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:16,255:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,256:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:16,256:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:16,261:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,261:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:16,262:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,262:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,262:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:16,262:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:16,268:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,268:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:16,268:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,268:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,268:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:16,268:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:16,274:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,274:[MYINFO] Cost of subgraph : 0.508235
2021-07-29 19:45:16,274:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,274:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,275:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:16,275:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 1024, 14, 14], float32))], (nullptr), [TensorType([1, 1024, 14, 14], float32), TensorType([1, 1024, 14, 14], float32)])
2021-07-29 19:45:16,280:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,280:[MYINFO] Cost of subgraph : 0.448278
2021-07-29 19:45:16,280:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,538:[MYINFO] =============================================
2021-07-29 19:45:16,539:[MYINFO] (topo_order, op_type) : 58, nn.conv2d
2021-07-29 19:45:16,541:[MYINFO] The following pattern is matched:
2021-07-29 19:45:16,541:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:16,543:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,543:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:16,543:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([1024, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e3058), [TensorType([1, 512, 28, 28], float32), TensorType([1024, 512, 1, 1], float32)])
2021-07-29 19:45:16,548:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,549:[MYINFO] Cost of subgraph : 0.940820
2021-07-29 19:45:16,549:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,549:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,549:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:16,549:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([1024, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e3058), [TensorType([1, 512, 28, 28], float32), TensorType([1024, 512, 1, 1], float32)])
2021-07-29 19:45:16,554:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,554:[MYINFO] Cost of subgraph : 0.906508
2021-07-29 19:45:16,555:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,555:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,555:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:16,555:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([1024, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e3058), [TensorType([1, 512, 28, 28], float32), TensorType([1024, 512, 1, 1], float32)])
2021-07-29 19:45:16,560:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,560:[MYINFO] Cost of subgraph : 1.198166
2021-07-29 19:45:16,560:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,817:[MYINFO] =============================================
2021-07-29 19:45:16,818:[MYINFO] (topo_order, op_type) : 58, nn.conv2d
2021-07-29 19:45:16,820:[MYINFO] The following pattern is matched:
2021-07-29 19:45:16,821:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:16,823:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,823:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:16,823:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:16,829:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,829:[MYINFO] Cost of subgraph : 0.530108
2021-07-29 19:45:16,829:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,829:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,829:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:16,829:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:16,835:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,835:[MYINFO] Cost of subgraph : 0.505064
2021-07-29 19:45:16,835:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,835:[MYINFO] ---------------------------------------------
2021-07-29 19:45:16,835:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:16,835:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32)), Var(weight, default, ty=TensorType([1024, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd0dd428), [TensorType([1, 256, 14, 14], float32), TensorType([1024, 256, 1, 1], float32)])
2021-07-29 19:45:16,840:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:16,841:[MYINFO] Cost of subgraph : 0.434962
2021-07-29 19:45:16,841:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,098:[MYINFO] =============================================
2021-07-29 19:45:17,099:[MYINFO] (topo_order, op_type) : 59, nn.relu
2021-07-29 19:45:17,102:[MYINFO] The following pattern is matched:
2021-07-29 19:45:17,102:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:17,104:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,104:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:17,104:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:17,105:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,105:[MYINFO] Cost of subgraph : 0.074855
2021-07-29 19:45:17,105:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,106:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,106:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:17,106:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 14, 14], float32))], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:17,107:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,107:[MYINFO] Cost of subgraph : 0.012676
2021-07-29 19:45:17,107:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,110:[MYINFO] The following pattern is matched:
2021-07-29 19:45:17,110:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:17,113:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,113:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:17,113:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc161d38), [TensorType([1, 256, 28, 28], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:17,119:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,119:[MYINFO] Cost of subgraph : 1.105015
2021-07-29 19:45:17,119:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,119:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,119:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:17,119:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc161d38), [TensorType([1, 256, 28, 28], float32), TensorType([256, 256, 3, 3], float32)])], (nullptr), [TensorType([1, 256, 14, 14], float32)])
2021-07-29 19:45:17,125:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,125:[MYINFO] Cost of subgraph : 1.112939
2021-07-29 19:45:17,125:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,382:[MYINFO] =============================================
2021-07-29 19:45:17,383:[MYINFO] (topo_order, op_type) : 60, nn.conv2d
2021-07-29 19:45:17,385:[MYINFO] The following pattern is matched:
2021-07-29 19:45:17,385:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:17,387:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,387:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:17,388:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc161d38), [TensorType([1, 256, 28, 28], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:17,393:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,393:[MYINFO] Cost of subgraph : 1.133625
2021-07-29 19:45:17,393:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,393:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,394:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:17,394:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc161d38), [TensorType([1, 256, 28, 28], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:17,399:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,399:[MYINFO] Cost of subgraph : 1.103838
2021-07-29 19:45:17,399:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,399:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,399:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:17,400:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 256, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc161d38), [TensorType([1, 256, 28, 28], float32), TensorType([256, 256, 3, 3], float32)])
2021-07-29 19:45:17,405:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,405:[MYINFO] Cost of subgraph : 1.111979
2021-07-29 19:45:17,405:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,804:[MYINFO] =============================================
2021-07-29 19:45:17,804:[MYINFO] (topo_order, op_type) : 61, nn.relu
2021-07-29 19:45:17,807:[MYINFO] The following pattern is matched:
2021-07-29 19:45:17,807:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:17,809:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,809:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:17,809:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 28, 28], float32))], (nullptr), [TensorType([1, 256, 28, 28], float32)])
2021-07-29 19:45:17,810:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,810:[MYINFO] Cost of subgraph : 0.105635
2021-07-29 19:45:17,811:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,811:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,811:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:17,811:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 28, 28], float32))], (nullptr), [TensorType([1, 256, 28, 28], float32)])
2021-07-29 19:45:17,812:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,812:[MYINFO] Cost of subgraph : 0.050261
2021-07-29 19:45:17,812:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,815:[MYINFO] The following pattern is matched:
2021-07-29 19:45:17,815:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:17,818:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,818:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:17,818:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91cfe8), [TensorType([1, 512, 28, 28], float32), TensorType([256, 512, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 28, 28], float32)])
2021-07-29 19:45:17,823:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,824:[MYINFO] Cost of subgraph : 0.862415
2021-07-29 19:45:17,824:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,824:[MYINFO] ---------------------------------------------
2021-07-29 19:45:17,824:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:17,824:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91cfe8), [TensorType([1, 512, 28, 28], float32), TensorType([256, 512, 1, 1], float32)])], (nullptr), [TensorType([1, 256, 28, 28], float32)])
2021-07-29 19:45:17,829:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:17,830:[MYINFO] Cost of subgraph : 0.729512
2021-07-29 19:45:17,830:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,088:[MYINFO] =============================================
2021-07-29 19:45:18,089:[MYINFO] (topo_order, op_type) : 62, nn.conv2d
2021-07-29 19:45:18,091:[MYINFO] The following pattern is matched:
2021-07-29 19:45:18,091:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:18,093:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,093:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:18,093:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91cfe8), [TensorType([1, 512, 28, 28], float32), TensorType([256, 512, 1, 1], float32)])
2021-07-29 19:45:18,099:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,099:[MYINFO] Cost of subgraph : 0.902622
2021-07-29 19:45:18,099:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,099:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,099:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,099:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91cfe8), [TensorType([1, 512, 28, 28], float32), TensorType([256, 512, 1, 1], float32)])
2021-07-29 19:45:18,104:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,105:[MYINFO] Cost of subgraph : 0.869270
2021-07-29 19:45:18,105:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,105:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,105:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,105:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([256, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe91cfe8), [TensorType([1, 512, 28, 28], float32), TensorType([256, 512, 1, 1], float32)])
2021-07-29 19:45:18,112:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,112:[MYINFO] Cost of subgraph : 0.725684
2021-07-29 19:45:18,112:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,382:[MYINFO] =============================================
2021-07-29 19:45:18,383:[MYINFO] (topo_order, op_type) : 63, nn.relu
2021-07-29 19:45:18,386:[MYINFO] The following pattern is matched:
2021-07-29 19:45:18,386:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:18,387:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,388:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,388:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,389:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,389:[MYINFO] Cost of subgraph : 0.147599
2021-07-29 19:45:18,389:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,389:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,390:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,390:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,391:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,391:[MYINFO] Cost of subgraph : 0.087821
2021-07-29 19:45:18,391:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,396:[MYINFO] The following pattern is matched:
2021-07-29 19:45:18,396:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:18,399:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,400:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,400:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,405:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,406:[MYINFO] Cost of subgraph : 0.441430
2021-07-29 19:45:18,406:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,406:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,406:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,406:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,412:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,412:[MYINFO] Cost of subgraph : 0.440822
2021-07-29 19:45:18,412:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,413:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,413:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,413:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,419:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,419:[MYINFO] Cost of subgraph : 0.441430
2021-07-29 19:45:18,419:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,419:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,419:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,419:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,425:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,425:[MYINFO] Cost of subgraph : 0.440822
2021-07-29 19:45:18,425:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,681:[MYINFO] =============================================
2021-07-29 19:45:18,682:[MYINFO] (topo_order, op_type) : 64, add
2021-07-29 19:45:18,684:[MYINFO] The following pattern is matched:
2021-07-29 19:45:18,684:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:18,686:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,686:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,686:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,688:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,688:[MYINFO] Cost of subgraph : 0.177646
2021-07-29 19:45:18,688:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,688:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,688:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,688:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,689:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,689:[MYINFO] Cost of subgraph : 0.112053
2021-07-29 19:45:18,690:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,690:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,690:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,690:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,691:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,691:[MYINFO] Cost of subgraph : 0.177646
2021-07-29 19:45:18,692:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,692:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,692:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,692:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,693:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,693:[MYINFO] Cost of subgraph : 0.112053
2021-07-29 19:45:18,693:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,702:[MYINFO] The following pattern is matched:
2021-07-29 19:45:18,702:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:18,705:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,705:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,705:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,711:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,711:[MYINFO] Cost of subgraph : 0.459451
2021-07-29 19:45:18,711:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,711:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,711:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,711:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,717:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,717:[MYINFO] Cost of subgraph : 0.440750
2021-07-29 19:45:18,717:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,717:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,718:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,718:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,723:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,723:[MYINFO] Cost of subgraph : 0.459451
2021-07-29 19:45:18,723:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,723:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,724:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,724:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:18,729:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,729:[MYINFO] Cost of subgraph : 0.440750
2021-07-29 19:45:18,729:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,979:[MYINFO] =============================================
2021-07-29 19:45:18,980:[MYINFO] (topo_order, op_type) : 65, nn.conv2d
2021-07-29 19:45:18,982:[MYINFO] The following pattern is matched:
2021-07-29 19:45:18,982:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:18,984:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,984:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:18,984:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:18,990:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,990:[MYINFO] Cost of subgraph : 0.493087
2021-07-29 19:45:18,990:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,990:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,990:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:18,990:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:18,995:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:18,996:[MYINFO] Cost of subgraph : 0.444220
2021-07-29 19:45:18,996:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,996:[MYINFO] ---------------------------------------------
2021-07-29 19:45:18,996:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:18,996:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe1e33b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:19,002:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,002:[MYINFO] Cost of subgraph : 0.426776
2021-07-29 19:45:19,002:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,271:[MYINFO] =============================================
2021-07-29 19:45:19,271:[MYINFO] (topo_order, op_type) : 66, nn.relu
2021-07-29 19:45:19,274:[MYINFO] The following pattern is matched:
2021-07-29 19:45:19,274:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:19,276:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,276:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:19,276:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:19,277:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,277:[MYINFO] Cost of subgraph : 0.086032
2021-07-29 19:45:19,277:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,278:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,278:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:19,278:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:19,279:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,279:[MYINFO] Cost of subgraph : 0.028662
2021-07-29 19:45:19,279:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,282:[MYINFO] The following pattern is matched:
2021-07-29 19:45:19,282:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:19,284:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,285:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:19,285:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe1e2388), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:19,290:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,290:[MYINFO] Cost of subgraph : 0.533625
2021-07-29 19:45:19,291:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,291:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,291:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:19,291:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe1e2388), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:19,296:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,297:[MYINFO] Cost of subgraph : 0.486896
2021-07-29 19:45:19,297:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,556:[MYINFO] =============================================
2021-07-29 19:45:19,557:[MYINFO] (topo_order, op_type) : 67, nn.conv2d
2021-07-29 19:45:19,559:[MYINFO] The following pattern is matched:
2021-07-29 19:45:19,559:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:19,561:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,561:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:19,561:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe1e2388), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:19,567:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,567:[MYINFO] Cost of subgraph : 0.529354
2021-07-29 19:45:19,567:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,567:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,568:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:19,568:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe1e2388), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:19,573:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,573:[MYINFO] Cost of subgraph : 0.546782
2021-07-29 19:45:19,573:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,573:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,573:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:19,574:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe1e2388), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:19,579:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,579:[MYINFO] Cost of subgraph : 0.488169
2021-07-29 19:45:19,579:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,836:[MYINFO] =============================================
2021-07-29 19:45:19,836:[MYINFO] (topo_order, op_type) : 68, nn.relu
2021-07-29 19:45:19,839:[MYINFO] The following pattern is matched:
2021-07-29 19:45:19,839:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:19,841:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,841:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:19,841:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:19,842:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,842:[MYINFO] Cost of subgraph : 0.086032
2021-07-29 19:45:19,842:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,843:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,843:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:19,843:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:19,844:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,844:[MYINFO] Cost of subgraph : 0.028662
2021-07-29 19:45:19,844:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,847:[MYINFO] The following pattern is matched:
2021-07-29 19:45:19,847:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:19,850:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,850:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:19,850:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15f848), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:19,856:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,856:[MYINFO] Cost of subgraph : 0.495483
2021-07-29 19:45:19,856:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,856:[MYINFO] ---------------------------------------------
2021-07-29 19:45:19,856:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:19,856:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15f848), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:19,862:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:19,862:[MYINFO] Cost of subgraph : 0.411932
2021-07-29 19:45:19,862:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,249:[MYINFO] =============================================
2021-07-29 19:45:20,250:[MYINFO] (topo_order, op_type) : 69, nn.conv2d
2021-07-29 19:45:20,252:[MYINFO] The following pattern is matched:
2021-07-29 19:45:20,253:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:20,254:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,255:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:20,255:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15f848), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:20,260:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,260:[MYINFO] Cost of subgraph : 0.488943
2021-07-29 19:45:20,261:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,261:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,261:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:20,261:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15f848), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:20,266:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,266:[MYINFO] Cost of subgraph : 0.484056
2021-07-29 19:45:20,266:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,267:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,267:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:20,267:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15f848), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:20,272:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,272:[MYINFO] Cost of subgraph : 0.411787
2021-07-29 19:45:20,272:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,526:[MYINFO] =============================================
2021-07-29 19:45:20,527:[MYINFO] (topo_order, op_type) : 70, nn.relu
2021-07-29 19:45:20,529:[MYINFO] The following pattern is matched:
2021-07-29 19:45:20,529:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:20,531:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,531:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:20,531:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,532:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,533:[MYINFO] Cost of subgraph : 0.147599
2021-07-29 19:45:20,533:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,533:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,533:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:20,533:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,534:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,534:[MYINFO] Cost of subgraph : 0.087821
2021-07-29 19:45:20,534:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,539:[MYINFO] The following pattern is matched:
2021-07-29 19:45:20,539:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:20,542:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,543:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:20,543:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,548:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,549:[MYINFO] Cost of subgraph : 0.441430
2021-07-29 19:45:20,549:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,549:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,549:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:20,549:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,555:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,555:[MYINFO] Cost of subgraph : 0.440822
2021-07-29 19:45:20,555:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,556:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,556:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:20,556:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,562:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,562:[MYINFO] Cost of subgraph : 0.441430
2021-07-29 19:45:20,562:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,562:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,562:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:20,562:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,568:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,568:[MYINFO] Cost of subgraph : 0.440822
2021-07-29 19:45:20,568:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,824:[MYINFO] =============================================
2021-07-29 19:45:20,825:[MYINFO] (topo_order, op_type) : 71, add
2021-07-29 19:45:20,827:[MYINFO] The following pattern is matched:
2021-07-29 19:45:20,827:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:20,829:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,829:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:20,829:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,831:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,831:[MYINFO] Cost of subgraph : 0.177646
2021-07-29 19:45:20,831:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,831:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,832:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:20,832:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,833:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,833:[MYINFO] Cost of subgraph : 0.112053
2021-07-29 19:45:20,833:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,834:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,834:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:20,834:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,835:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,835:[MYINFO] Cost of subgraph : 0.177646
2021-07-29 19:45:20,835:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,835:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,836:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:20,836:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,837:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,837:[MYINFO] Cost of subgraph : 0.112053
2021-07-29 19:45:20,837:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,845:[MYINFO] The following pattern is matched:
2021-07-29 19:45:20,845:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:20,848:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,848:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:20,848:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,854:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,854:[MYINFO] Cost of subgraph : 0.459451
2021-07-29 19:45:20,854:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,854:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,854:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:20,855:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,861:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,861:[MYINFO] Cost of subgraph : 0.440750
2021-07-29 19:45:20,861:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,862:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,862:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:20,862:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,867:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,868:[MYINFO] Cost of subgraph : 0.459451
2021-07-29 19:45:20,868:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,868:[MYINFO] ---------------------------------------------
2021-07-29 19:45:20,868:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:20,868:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:20,874:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:20,874:[MYINFO] Cost of subgraph : 0.440750
2021-07-29 19:45:20,874:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,125:[MYINFO] =============================================
2021-07-29 19:45:21,126:[MYINFO] (topo_order, op_type) : 72, nn.conv2d
2021-07-29 19:45:21,128:[MYINFO] The following pattern is matched:
2021-07-29 19:45:21,128:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:21,130:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,130:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:21,130:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:21,135:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,136:[MYINFO] Cost of subgraph : 0.493087
2021-07-29 19:45:21,136:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,136:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,136:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:21,136:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:21,141:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,141:[MYINFO] Cost of subgraph : 0.444220
2021-07-29 19:45:21,141:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,142:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,142:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:21,142:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15faa8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:21,147:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,147:[MYINFO] Cost of subgraph : 0.426776
2021-07-29 19:45:21,147:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,403:[MYINFO] =============================================
2021-07-29 19:45:21,403:[MYINFO] (topo_order, op_type) : 73, nn.relu
2021-07-29 19:45:21,405:[MYINFO] The following pattern is matched:
2021-07-29 19:45:21,406:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:21,407:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,407:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:21,408:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:21,409:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,409:[MYINFO] Cost of subgraph : 0.086032
2021-07-29 19:45:21,409:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,409:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,409:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:21,409:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:21,411:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,411:[MYINFO] Cost of subgraph : 0.028662
2021-07-29 19:45:21,411:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,413:[MYINFO] The following pattern is matched:
2021-07-29 19:45:21,414:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:21,416:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,416:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:21,416:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f3878), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:21,422:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,422:[MYINFO] Cost of subgraph : 0.533625
2021-07-29 19:45:21,422:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,422:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,422:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:21,422:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f3878), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:21,428:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,428:[MYINFO] Cost of subgraph : 0.486896
2021-07-29 19:45:21,428:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,684:[MYINFO] =============================================
2021-07-29 19:45:21,684:[MYINFO] (topo_order, op_type) : 74, nn.conv2d
2021-07-29 19:45:21,686:[MYINFO] The following pattern is matched:
2021-07-29 19:45:21,687:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:21,688:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,689:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:21,689:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f3878), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:21,694:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,694:[MYINFO] Cost of subgraph : 0.529354
2021-07-29 19:45:21,694:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,694:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,695:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:21,695:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f3878), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:21,700:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,700:[MYINFO] Cost of subgraph : 0.546782
2021-07-29 19:45:21,700:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,700:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,700:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:21,700:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xd7f3878), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:21,706:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,706:[MYINFO] Cost of subgraph : 0.488169
2021-07-29 19:45:21,706:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,967:[MYINFO] =============================================
2021-07-29 19:45:21,967:[MYINFO] (topo_order, op_type) : 75, nn.relu
2021-07-29 19:45:21,969:[MYINFO] The following pattern is matched:
2021-07-29 19:45:21,970:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:21,971:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,971:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:21,971:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:21,973:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,973:[MYINFO] Cost of subgraph : 0.086032
2021-07-29 19:45:21,973:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,973:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,973:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:21,973:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:21,974:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,974:[MYINFO] Cost of subgraph : 0.028662
2021-07-29 19:45:21,975:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,977:[MYINFO] The following pattern is matched:
2021-07-29 19:45:21,977:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:21,979:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,980:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:21,980:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe923778), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:21,985:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,985:[MYINFO] Cost of subgraph : 0.495483
2021-07-29 19:45:21,985:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,986:[MYINFO] ---------------------------------------------
2021-07-29 19:45:21,986:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:21,986:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe923778), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:21,991:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:21,991:[MYINFO] Cost of subgraph : 0.411932
2021-07-29 19:45:21,992:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,427:[MYINFO] =============================================
2021-07-29 19:45:22,428:[MYINFO] (topo_order, op_type) : 76, nn.conv2d
2021-07-29 19:45:22,430:[MYINFO] The following pattern is matched:
2021-07-29 19:45:22,431:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:22,433:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,433:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:22,433:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe923778), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:22,439:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,439:[MYINFO] Cost of subgraph : 0.488943
2021-07-29 19:45:22,439:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,440:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,440:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:22,440:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe923778), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:22,447:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,447:[MYINFO] Cost of subgraph : 0.484056
2021-07-29 19:45:22,447:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,447:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,448:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:22,448:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe923778), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:22,453:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,454:[MYINFO] Cost of subgraph : 0.411787
2021-07-29 19:45:22,454:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,736:[MYINFO] =============================================
2021-07-29 19:45:22,737:[MYINFO] (topo_order, op_type) : 77, nn.relu
2021-07-29 19:45:22,739:[MYINFO] The following pattern is matched:
2021-07-29 19:45:22,740:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:22,741:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,742:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:22,742:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:22,743:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,744:[MYINFO] Cost of subgraph : 0.147599
2021-07-29 19:45:22,744:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,744:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,744:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:22,744:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:22,746:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,746:[MYINFO] Cost of subgraph : 0.087821
2021-07-29 19:45:22,746:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,751:[MYINFO] The following pattern is matched:
2021-07-29 19:45:22,751:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:22,755:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,756:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:22,756:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:22,763:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,764:[MYINFO] Cost of subgraph : 0.441430
2021-07-29 19:45:22,764:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,764:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,765:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:22,765:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:22,771:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,771:[MYINFO] Cost of subgraph : 0.440822
2021-07-29 19:45:22,771:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,772:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,772:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:22,772:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:22,779:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,779:[MYINFO] Cost of subgraph : 0.441430
2021-07-29 19:45:22,779:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,779:[MYINFO] ---------------------------------------------
2021-07-29 19:45:22,780:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:22,780:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:22,787:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:22,787:[MYINFO] Cost of subgraph : 0.440822
2021-07-29 19:45:22,788:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,058:[MYINFO] =============================================
2021-07-29 19:45:23,059:[MYINFO] (topo_order, op_type) : 78, add
2021-07-29 19:45:23,062:[MYINFO] The following pattern is matched:
2021-07-29 19:45:23,062:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:23,064:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,064:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:23,064:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:23,065:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,066:[MYINFO] Cost of subgraph : 0.177646
2021-07-29 19:45:23,066:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,066:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,066:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:23,066:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:23,067:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,068:[MYINFO] Cost of subgraph : 0.112053
2021-07-29 19:45:23,068:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,068:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,068:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:23,068:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:23,070:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,070:[MYINFO] Cost of subgraph : 0.177646
2021-07-29 19:45:23,070:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,070:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,070:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:23,070:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:23,071:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,072:[MYINFO] Cost of subgraph : 0.112053
2021-07-29 19:45:23,072:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,079:[MYINFO] The following pattern is matched:
2021-07-29 19:45:23,079:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:23,082:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,082:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:23,082:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:23,087:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,088:[MYINFO] Cost of subgraph : 0.459451
2021-07-29 19:45:23,088:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,088:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,088:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:23,088:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:23,094:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,094:[MYINFO] Cost of subgraph : 0.440750
2021-07-29 19:45:23,094:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,094:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,094:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:23,094:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:23,100:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,100:[MYINFO] Cost of subgraph : 0.459451
2021-07-29 19:45:23,100:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,100:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,100:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:23,100:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:23,106:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,106:[MYINFO] Cost of subgraph : 0.440750
2021-07-29 19:45:23,106:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,356:[MYINFO] =============================================
2021-07-29 19:45:23,357:[MYINFO] (topo_order, op_type) : 79, nn.conv2d
2021-07-29 19:45:23,359:[MYINFO] The following pattern is matched:
2021-07-29 19:45:23,359:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:23,361:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,361:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:23,361:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:23,366:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,366:[MYINFO] Cost of subgraph : 0.493087
2021-07-29 19:45:23,366:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,367:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,367:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:23,367:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:23,372:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,372:[MYINFO] Cost of subgraph : 0.444220
2021-07-29 19:45:23,372:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,372:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,372:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:23,373:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb772b8), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:23,378:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,378:[MYINFO] Cost of subgraph : 0.426776
2021-07-29 19:45:23,378:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,633:[MYINFO] =============================================
2021-07-29 19:45:23,634:[MYINFO] (topo_order, op_type) : 80, nn.relu
2021-07-29 19:45:23,636:[MYINFO] The following pattern is matched:
2021-07-29 19:45:23,636:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:23,638:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,638:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:23,638:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:23,639:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,639:[MYINFO] Cost of subgraph : 0.086032
2021-07-29 19:45:23,640:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,640:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,640:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:23,640:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:23,641:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,641:[MYINFO] Cost of subgraph : 0.028662
2021-07-29 19:45:23,641:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,644:[MYINFO] The following pattern is matched:
2021-07-29 19:45:23,644:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:23,646:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,646:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:23,647:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc34d3d8), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:23,652:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,652:[MYINFO] Cost of subgraph : 0.533625
2021-07-29 19:45:23,652:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,652:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,653:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:23,653:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc34d3d8), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:23,658:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,658:[MYINFO] Cost of subgraph : 0.486896
2021-07-29 19:45:23,658:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,921:[MYINFO] =============================================
2021-07-29 19:45:23,922:[MYINFO] (topo_order, op_type) : 81, nn.conv2d
2021-07-29 19:45:23,924:[MYINFO] The following pattern is matched:
2021-07-29 19:45:23,924:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:23,926:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,926:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:23,926:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc34d3d8), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:23,931:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,932:[MYINFO] Cost of subgraph : 0.529354
2021-07-29 19:45:23,932:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,932:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,932:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:23,932:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc34d3d8), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:23,937:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,937:[MYINFO] Cost of subgraph : 0.546782
2021-07-29 19:45:23,938:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,938:[MYINFO] ---------------------------------------------
2021-07-29 19:45:23,938:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:23,938:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xc34d3d8), [TensorType([1, 128, 28, 28], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:23,943:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:23,943:[MYINFO] Cost of subgraph : 0.488169
2021-07-29 19:45:23,943:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,198:[MYINFO] =============================================
2021-07-29 19:45:24,199:[MYINFO] (topo_order, op_type) : 82, nn.relu
2021-07-29 19:45:24,200:[MYINFO] The following pattern is matched:
2021-07-29 19:45:24,201:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:24,202:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,202:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:24,203:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:24,204:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,204:[MYINFO] Cost of subgraph : 0.086032
2021-07-29 19:45:24,204:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,204:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,204:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:24,204:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:24,205:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,206:[MYINFO] Cost of subgraph : 0.028662
2021-07-29 19:45:24,206:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,208:[MYINFO] The following pattern is matched:
2021-07-29 19:45:24,209:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:24,211:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,211:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:24,211:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7efb48), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:24,217:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,217:[MYINFO] Cost of subgraph : 0.495483
2021-07-29 19:45:24,217:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,217:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,217:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:24,217:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7efb48), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:24,223:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,223:[MYINFO] Cost of subgraph : 0.411932
2021-07-29 19:45:24,223:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,475:[MYINFO] =============================================
2021-07-29 19:45:24,476:[MYINFO] (topo_order, op_type) : 83, nn.conv2d
2021-07-29 19:45:24,478:[MYINFO] The following pattern is matched:
2021-07-29 19:45:24,478:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:24,480:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,480:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:24,480:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7efb48), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:24,485:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,486:[MYINFO] Cost of subgraph : 0.488943
2021-07-29 19:45:24,486:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,486:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,486:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:24,486:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7efb48), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:24,491:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,491:[MYINFO] Cost of subgraph : 0.484056
2021-07-29 19:45:24,492:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,492:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,492:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:24,492:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(weight, default, ty=TensorType([128, 512, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7efb48), [TensorType([1, 512, 28, 28], float32), TensorType([128, 512, 1, 1], float32)])
2021-07-29 19:45:24,497:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,497:[MYINFO] Cost of subgraph : 0.411787
2021-07-29 19:45:24,497:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,888:[MYINFO] =============================================
2021-07-29 19:45:24,889:[MYINFO] (topo_order, op_type) : 84, nn.relu
2021-07-29 19:45:24,891:[MYINFO] The following pattern is matched:
2021-07-29 19:45:24,891:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:24,893:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,893:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:24,893:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:24,894:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,894:[MYINFO] Cost of subgraph : 0.147599
2021-07-29 19:45:24,895:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,895:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,895:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:24,895:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:24,896:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,896:[MYINFO] Cost of subgraph : 0.087821
2021-07-29 19:45:24,896:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,900:[MYINFO] The following pattern is matched:
2021-07-29 19:45:24,901:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:24,904:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,904:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:24,904:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:24,910:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,910:[MYINFO] Cost of subgraph : 0.441430
2021-07-29 19:45:24,910:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,910:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,910:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:24,911:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:24,916:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,916:[MYINFO] Cost of subgraph : 0.440822
2021-07-29 19:45:24,916:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,917:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,917:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:24,917:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:24,923:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,923:[MYINFO] Cost of subgraph : 0.441430
2021-07-29 19:45:24,923:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,924:[MYINFO] ---------------------------------------------
2021-07-29 19:45:24,924:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:24,924:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])], (nullptr), [TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:24,929:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:24,930:[MYINFO] Cost of subgraph : 0.440822
2021-07-29 19:45:24,930:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,183:[MYINFO] =============================================
2021-07-29 19:45:25,184:[MYINFO] (topo_order, op_type) : 85, add
2021-07-29 19:45:25,186:[MYINFO] The following pattern is matched:
2021-07-29 19:45:25,186:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:25,187:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,188:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:25,188:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:25,189:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,189:[MYINFO] Cost of subgraph : 0.177646
2021-07-29 19:45:25,189:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,189:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,189:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:25,190:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:25,191:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,191:[MYINFO] Cost of subgraph : 0.112053
2021-07-29 19:45:25,191:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,191:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,192:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:25,192:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:25,193:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,193:[MYINFO] Cost of subgraph : 0.177646
2021-07-29 19:45:25,193:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,193:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,193:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:25,193:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 512, 28, 28], float32)), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:25,195:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,195:[MYINFO] Cost of subgraph : 0.112053
2021-07-29 19:45:25,195:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,201:[MYINFO] The following pattern is matched:
2021-07-29 19:45:25,201:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:25,204:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,204:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:25,204:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:25,209:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,210:[MYINFO] Cost of subgraph : 0.459451
2021-07-29 19:45:25,210:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,210:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,210:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:25,210:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:25,216:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,216:[MYINFO] Cost of subgraph : 0.440750
2021-07-29 19:45:25,216:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,216:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,216:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:25,216:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:25,222:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,222:[MYINFO] Cost of subgraph : 0.459451
2021-07-29 19:45:25,222:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,222:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,222:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:25,223:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 512, 28, 28], float32))], (nullptr), [TensorType([1, 512, 28, 28], float32), TensorType([1, 512, 28, 28], float32)])
2021-07-29 19:45:25,228:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,228:[MYINFO] Cost of subgraph : 0.440750
2021-07-29 19:45:25,228:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,477:[MYINFO] =============================================
2021-07-29 19:45:25,478:[MYINFO] (topo_order, op_type) : 86, nn.conv2d
2021-07-29 19:45:25,479:[MYINFO] The following pattern is matched:
2021-07-29 19:45:25,480:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:25,481:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,482:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:25,482:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([512, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb74078), [TensorType([1, 256, 56, 56], float32), TensorType([512, 256, 1, 1], float32)])
2021-07-29 19:45:25,487:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,488:[MYINFO] Cost of subgraph : 0.929133
2021-07-29 19:45:25,488:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,488:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,488:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:25,488:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([512, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb74078), [TensorType([1, 256, 56, 56], float32), TensorType([512, 256, 1, 1], float32)])
2021-07-29 19:45:25,494:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,494:[MYINFO] Cost of subgraph : 0.743820
2021-07-29 19:45:25,494:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,494:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,494:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:25,495:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([512, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb74078), [TensorType([1, 256, 56, 56], float32), TensorType([512, 256, 1, 1], float32)])
2021-07-29 19:45:25,500:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,500:[MYINFO] Cost of subgraph : 1.254341
2021-07-29 19:45:25,500:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,753:[MYINFO] =============================================
2021-07-29 19:45:25,753:[MYINFO] (topo_order, op_type) : 86, nn.conv2d
2021-07-29 19:45:25,755:[MYINFO] The following pattern is matched:
2021-07-29 19:45:25,755:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:25,757:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,757:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:25,757:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:25,763:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,763:[MYINFO] Cost of subgraph : 0.493087
2021-07-29 19:45:25,763:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,763:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,763:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:25,763:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:25,768:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,769:[MYINFO] Cost of subgraph : 0.444220
2021-07-29 19:45:25,769:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,769:[MYINFO] ---------------------------------------------
2021-07-29 19:45:25,769:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:25,769:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32)), Var(weight, default, ty=TensorType([512, 128, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb72398), [TensorType([1, 128, 28, 28], float32), TensorType([512, 128, 1, 1], float32)])
2021-07-29 19:45:25,774:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:25,774:[MYINFO] Cost of subgraph : 0.426776
2021-07-29 19:45:25,775:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,032:[MYINFO] =============================================
2021-07-29 19:45:26,032:[MYINFO] (topo_order, op_type) : 87, nn.relu
2021-07-29 19:45:26,034:[MYINFO] The following pattern is matched:
2021-07-29 19:45:26,034:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:26,036:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,036:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:26,036:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:26,037:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,037:[MYINFO] Cost of subgraph : 0.086032
2021-07-29 19:45:26,037:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,038:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,038:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:26,038:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 28, 28], float32))], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:26,039:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,039:[MYINFO] Cost of subgraph : 0.028662
2021-07-29 19:45:26,039:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,042:[MYINFO] The following pattern is matched:
2021-07-29 19:45:26,042:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:26,044:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,044:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:26,044:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923ec8), [TensorType([1, 128, 56, 56], float32), TensorType([128, 128, 3, 3], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:26,050:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,050:[MYINFO] Cost of subgraph : 0.937478
2021-07-29 19:45:26,050:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,050:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,050:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:26,050:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923ec8), [TensorType([1, 128, 56, 56], float32), TensorType([128, 128, 3, 3], float32)])], (nullptr), [TensorType([1, 128, 28, 28], float32)])
2021-07-29 19:45:26,056:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,056:[MYINFO] Cost of subgraph : 1.029210
2021-07-29 19:45:26,056:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,309:[MYINFO] =============================================
2021-07-29 19:45:26,310:[MYINFO] (topo_order, op_type) : 88, nn.conv2d
2021-07-29 19:45:26,312:[MYINFO] The following pattern is matched:
2021-07-29 19:45:26,313:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:26,314:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,314:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:26,315:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923ec8), [TensorType([1, 128, 56, 56], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:26,320:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,320:[MYINFO] Cost of subgraph : 1.099371
2021-07-29 19:45:26,320:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,320:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,320:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:26,321:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923ec8), [TensorType([1, 128, 56, 56], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:26,326:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,326:[MYINFO] Cost of subgraph : 0.946194
2021-07-29 19:45:26,326:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,326:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,326:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:26,326:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 128, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 128, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923ec8), [TensorType([1, 128, 56, 56], float32), TensorType([128, 128, 3, 3], float32)])
2021-07-29 19:45:26,332:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,332:[MYINFO] Cost of subgraph : 1.028278
2021-07-29 19:45:26,332:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,583:[MYINFO] =============================================
2021-07-29 19:45:26,584:[MYINFO] (topo_order, op_type) : 89, nn.relu
2021-07-29 19:45:26,586:[MYINFO] The following pattern is matched:
2021-07-29 19:45:26,586:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:26,587:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,588:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:26,588:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 56, 56], float32))], (nullptr), [TensorType([1, 128, 56, 56], float32)])
2021-07-29 19:45:26,589:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,589:[MYINFO] Cost of subgraph : 0.136822
2021-07-29 19:45:26,589:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,589:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,589:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:26,589:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 128, 56, 56], float32))], (nullptr), [TensorType([1, 128, 56, 56], float32)])
2021-07-29 19:45:26,590:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,591:[MYINFO] Cost of subgraph : 0.088034
2021-07-29 19:45:26,591:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,593:[MYINFO] The following pattern is matched:
2021-07-29 19:45:26,593:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:26,595:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,596:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:26,596:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4308), [TensorType([1, 256, 56, 56], float32), TensorType([128, 256, 1, 1], float32)])], (nullptr), [TensorType([1, 128, 56, 56], float32)])
2021-07-29 19:45:26,601:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,601:[MYINFO] Cost of subgraph : 0.697132
2021-07-29 19:45:26,601:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,602:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,602:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:26,602:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4308), [TensorType([1, 256, 56, 56], float32), TensorType([128, 256, 1, 1], float32)])], (nullptr), [TensorType([1, 128, 56, 56], float32)])
2021-07-29 19:45:26,607:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,607:[MYINFO] Cost of subgraph : 0.698603
2021-07-29 19:45:26,608:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,859:[MYINFO] =============================================
2021-07-29 19:45:26,860:[MYINFO] (topo_order, op_type) : 90, nn.conv2d
2021-07-29 19:45:26,861:[MYINFO] The following pattern is matched:
2021-07-29 19:45:26,862:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:26,863:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,863:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:26,864:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4308), [TensorType([1, 256, 56, 56], float32), TensorType([128, 256, 1, 1], float32)])
2021-07-29 19:45:26,869:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,869:[MYINFO] Cost of subgraph : 0.888602
2021-07-29 19:45:26,869:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,869:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,869:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:26,870:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4308), [TensorType([1, 256, 56, 56], float32), TensorType([128, 256, 1, 1], float32)])
2021-07-29 19:45:26,875:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,875:[MYINFO] Cost of subgraph : 0.696822
2021-07-29 19:45:26,875:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,875:[MYINFO] ---------------------------------------------
2021-07-29 19:45:26,875:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:26,875:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([128, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xd7f4308), [TensorType([1, 256, 56, 56], float32), TensorType([128, 256, 1, 1], float32)])
2021-07-29 19:45:26,880:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:26,881:[MYINFO] Cost of subgraph : 0.695954
2021-07-29 19:45:26,881:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,266:[MYINFO] =============================================
2021-07-29 19:45:27,267:[MYINFO] (topo_order, op_type) : 91, nn.relu
2021-07-29 19:45:27,269:[MYINFO] The following pattern is matched:
2021-07-29 19:45:27,269:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:27,271:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,271:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:27,271:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,272:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,272:[MYINFO] Cost of subgraph : 0.211548
2021-07-29 19:45:27,272:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,272:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,273:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:27,273:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,274:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,274:[MYINFO] Cost of subgraph : 0.149113
2021-07-29 19:45:27,274:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,278:[MYINFO] The following pattern is matched:
2021-07-29 19:45:27,278:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:27,281:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,281:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:27,281:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,287:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,287:[MYINFO] Cost of subgraph : 0.432984
2021-07-29 19:45:27,287:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,288:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,288:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:27,288:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,294:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,294:[MYINFO] Cost of subgraph : 0.450268
2021-07-29 19:45:27,294:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,294:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,294:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:27,294:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,300:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,300:[MYINFO] Cost of subgraph : 0.432984
2021-07-29 19:45:27,300:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,301:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,301:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:27,301:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,306:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,307:[MYINFO] Cost of subgraph : 0.450268
2021-07-29 19:45:27,307:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,561:[MYINFO] =============================================
2021-07-29 19:45:27,562:[MYINFO] (topo_order, op_type) : 92, add
2021-07-29 19:45:27,564:[MYINFO] The following pattern is matched:
2021-07-29 19:45:27,564:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:27,565:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,566:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:27,566:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,567:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,567:[MYINFO] Cost of subgraph : 0.280274
2021-07-29 19:45:27,567:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,567:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,568:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:27,568:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,569:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,569:[MYINFO] Cost of subgraph : 0.213165
2021-07-29 19:45:27,569:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,569:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,570:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:27,570:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,571:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,571:[MYINFO] Cost of subgraph : 0.280274
2021-07-29 19:45:27,571:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,571:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,571:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:27,571:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,572:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,573:[MYINFO] Cost of subgraph : 0.213165
2021-07-29 19:45:27,573:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,578:[MYINFO] The following pattern is matched:
2021-07-29 19:45:27,578:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:27,581:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,581:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:27,581:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,587:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,587:[MYINFO] Cost of subgraph : 0.421271
2021-07-29 19:45:27,587:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,587:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,587:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:27,587:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,593:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,593:[MYINFO] Cost of subgraph : 0.449882
2021-07-29 19:45:27,593:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,593:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,594:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:27,594:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,599:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,599:[MYINFO] Cost of subgraph : 0.421271
2021-07-29 19:45:27,599:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,599:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,600:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:27,600:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:27,605:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,605:[MYINFO] Cost of subgraph : 0.449882
2021-07-29 19:45:27,605:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,855:[MYINFO] =============================================
2021-07-29 19:45:27,856:[MYINFO] (topo_order, op_type) : 93, nn.conv2d
2021-07-29 19:45:27,858:[MYINFO] The following pattern is matched:
2021-07-29 19:45:27,858:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:27,860:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,860:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:27,860:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:27,865:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,866:[MYINFO] Cost of subgraph : 0.443471
2021-07-29 19:45:27,866:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,866:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,866:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:27,866:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:27,872:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,872:[MYINFO] Cost of subgraph : 0.383398
2021-07-29 19:45:27,872:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,872:[MYINFO] ---------------------------------------------
2021-07-29 19:45:27,872:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:27,872:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc15cb48), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:27,877:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:27,878:[MYINFO] Cost of subgraph : 0.428923
2021-07-29 19:45:27,878:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,129:[MYINFO] =============================================
2021-07-29 19:45:28,130:[MYINFO] (topo_order, op_type) : 94, nn.relu
2021-07-29 19:45:28,132:[MYINFO] The following pattern is matched:
2021-07-29 19:45:28,132:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:28,133:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,134:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:28,134:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:28,135:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,135:[MYINFO] Cost of subgraph : 0.097449
2021-07-29 19:45:28,135:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,135:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,135:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:28,135:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:28,137:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,137:[MYINFO] Cost of subgraph : 0.050096
2021-07-29 19:45:28,137:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,139:[MYINFO] The following pattern is matched:
2021-07-29 19:45:28,140:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:28,141:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,142:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:28,142:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923278), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:28,147:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,147:[MYINFO] Cost of subgraph : 0.494731
2021-07-29 19:45:28,148:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,148:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,148:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:28,148:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923278), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:28,153:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,153:[MYINFO] Cost of subgraph : 0.417247
2021-07-29 19:45:28,154:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,404:[MYINFO] =============================================
2021-07-29 19:45:28,405:[MYINFO] (topo_order, op_type) : 95, nn.conv2d
2021-07-29 19:45:28,407:[MYINFO] The following pattern is matched:
2021-07-29 19:45:28,407:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:28,409:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,409:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:28,409:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923278), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:28,414:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,414:[MYINFO] Cost of subgraph : 0.455319
2021-07-29 19:45:28,415:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,415:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,415:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:28,415:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923278), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:28,420:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,420:[MYINFO] Cost of subgraph : 0.504273
2021-07-29 19:45:28,420:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,421:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,421:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:28,421:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xe923278), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:28,426:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,426:[MYINFO] Cost of subgraph : 0.416785
2021-07-29 19:45:28,426:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,683:[MYINFO] =============================================
2021-07-29 19:45:28,683:[MYINFO] (topo_order, op_type) : 96, nn.relu
2021-07-29 19:45:28,685:[MYINFO] The following pattern is matched:
2021-07-29 19:45:28,685:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:28,687:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,687:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:28,687:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:28,688:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,689:[MYINFO] Cost of subgraph : 0.097449
2021-07-29 19:45:28,689:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,689:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,689:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:28,689:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:28,690:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,690:[MYINFO] Cost of subgraph : 0.050096
2021-07-29 19:45:28,690:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,693:[MYINFO] The following pattern is matched:
2021-07-29 19:45:28,693:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:28,695:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,695:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:28,695:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb741b8), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:28,701:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,701:[MYINFO] Cost of subgraph : 0.410362
2021-07-29 19:45:28,701:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,701:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,702:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:28,702:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb741b8), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:28,707:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,707:[MYINFO] Cost of subgraph : 0.440452
2021-07-29 19:45:28,707:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,961:[MYINFO] =============================================
2021-07-29 19:45:28,961:[MYINFO] (topo_order, op_type) : 97, nn.conv2d
2021-07-29 19:45:28,963:[MYINFO] The following pattern is matched:
2021-07-29 19:45:28,963:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:28,965:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,965:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:28,965:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb741b8), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])
2021-07-29 19:45:28,971:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,971:[MYINFO] Cost of subgraph : 0.460337
2021-07-29 19:45:28,971:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,971:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,971:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:28,971:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb741b8), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])
2021-07-29 19:45:28,976:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,977:[MYINFO] Cost of subgraph : 0.408445
2021-07-29 19:45:28,977:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,977:[MYINFO] ---------------------------------------------
2021-07-29 19:45:28,977:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:28,977:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbb741b8), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])
2021-07-29 19:45:28,982:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:28,983:[MYINFO] Cost of subgraph : 0.440779
2021-07-29 19:45:28,983:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,367:[MYINFO] =============================================
2021-07-29 19:45:29,368:[MYINFO] (topo_order, op_type) : 98, nn.relu
2021-07-29 19:45:29,370:[MYINFO] The following pattern is matched:
2021-07-29 19:45:29,370:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:29,371:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,371:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:29,372:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,373:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,373:[MYINFO] Cost of subgraph : 0.211548
2021-07-29 19:45:29,373:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,373:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,373:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:29,373:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,374:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,375:[MYINFO] Cost of subgraph : 0.149113
2021-07-29 19:45:29,375:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,378:[MYINFO] The following pattern is matched:
2021-07-29 19:45:29,379:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:29,382:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,382:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:29,382:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,388:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,388:[MYINFO] Cost of subgraph : 0.432984
2021-07-29 19:45:29,388:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,388:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,388:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:29,388:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,394:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,394:[MYINFO] Cost of subgraph : 0.450268
2021-07-29 19:45:29,394:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,395:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,395:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:29,395:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,401:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,401:[MYINFO] Cost of subgraph : 0.432984
2021-07-29 19:45:29,401:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,401:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,401:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:29,401:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,407:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,407:[MYINFO] Cost of subgraph : 0.450268
2021-07-29 19:45:29,407:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,659:[MYINFO] =============================================
2021-07-29 19:45:29,659:[MYINFO] (topo_order, op_type) : 99, add
2021-07-29 19:45:29,661:[MYINFO] The following pattern is matched:
2021-07-29 19:45:29,661:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:29,663:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,663:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:29,663:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,665:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,665:[MYINFO] Cost of subgraph : 0.280274
2021-07-29 19:45:29,665:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,665:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,665:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:29,665:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,666:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,666:[MYINFO] Cost of subgraph : 0.213165
2021-07-29 19:45:29,667:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,667:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,667:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:29,667:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,668:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,668:[MYINFO] Cost of subgraph : 0.280274
2021-07-29 19:45:29,669:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,669:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,669:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:29,669:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,670:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,670:[MYINFO] Cost of subgraph : 0.213165
2021-07-29 19:45:29,670:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,675:[MYINFO] The following pattern is matched:
2021-07-29 19:45:29,675:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:29,677:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,678:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:29,678:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,683:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,683:[MYINFO] Cost of subgraph : 0.421271
2021-07-29 19:45:29,684:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,684:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,684:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:29,684:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,689:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,690:[MYINFO] Cost of subgraph : 0.449882
2021-07-29 19:45:29,690:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,690:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,690:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:29,690:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,696:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,696:[MYINFO] Cost of subgraph : 0.421271
2021-07-29 19:45:29,696:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,696:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,696:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:29,696:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:29,702:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,702:[MYINFO] Cost of subgraph : 0.449882
2021-07-29 19:45:29,702:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,958:[MYINFO] =============================================
2021-07-29 19:45:29,959:[MYINFO] (topo_order, op_type) : 100, nn.conv2d
2021-07-29 19:45:29,960:[MYINFO] The following pattern is matched:
2021-07-29 19:45:29,961:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:29,962:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,962:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:29,962:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:29,969:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,969:[MYINFO] Cost of subgraph : 0.443471
2021-07-29 19:45:29,969:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,969:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,969:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:29,969:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:29,975:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,975:[MYINFO] Cost of subgraph : 0.383398
2021-07-29 19:45:29,975:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,975:[MYINFO] ---------------------------------------------
2021-07-29 19:45:29,975:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:29,976:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xbd59868), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:29,981:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:29,981:[MYINFO] Cost of subgraph : 0.428923
2021-07-29 19:45:29,981:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,236:[MYINFO] =============================================
2021-07-29 19:45:30,237:[MYINFO] (topo_order, op_type) : 101, nn.relu
2021-07-29 19:45:30,238:[MYINFO] The following pattern is matched:
2021-07-29 19:45:30,238:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:30,240:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,240:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:30,240:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:30,241:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,241:[MYINFO] Cost of subgraph : 0.097449
2021-07-29 19:45:30,242:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,242:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,242:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:30,242:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:30,243:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,243:[MYINFO] Cost of subgraph : 0.050096
2021-07-29 19:45:30,243:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,246:[MYINFO] The following pattern is matched:
2021-07-29 19:45:30,246:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:30,248:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,248:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:30,248:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xfe65018), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:30,254:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,254:[MYINFO] Cost of subgraph : 0.494731
2021-07-29 19:45:30,254:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,254:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,254:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:30,254:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xfe65018), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:30,261:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,261:[MYINFO] Cost of subgraph : 0.417247
2021-07-29 19:45:30,262:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,516:[MYINFO] =============================================
2021-07-29 19:45:30,517:[MYINFO] (topo_order, op_type) : 102, nn.conv2d
2021-07-29 19:45:30,518:[MYINFO] The following pattern is matched:
2021-07-29 19:45:30,519:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:30,520:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,520:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:30,520:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xfe65018), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:30,526:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,526:[MYINFO] Cost of subgraph : 0.455319
2021-07-29 19:45:30,526:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,526:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,526:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:30,526:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xfe65018), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:30,532:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,532:[MYINFO] Cost of subgraph : 0.504273
2021-07-29 19:45:30,532:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,532:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,532:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:30,532:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xfe65018), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:30,537:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,537:[MYINFO] Cost of subgraph : 0.416785
2021-07-29 19:45:30,538:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,789:[MYINFO] =============================================
2021-07-29 19:45:30,790:[MYINFO] (topo_order, op_type) : 103, nn.relu
2021-07-29 19:45:30,791:[MYINFO] The following pattern is matched:
2021-07-29 19:45:30,791:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:30,793:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,793:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:30,793:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:30,794:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,794:[MYINFO] Cost of subgraph : 0.097449
2021-07-29 19:45:30,795:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,795:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,795:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:30,795:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:30,796:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,796:[MYINFO] Cost of subgraph : 0.050096
2021-07-29 19:45:30,796:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,799:[MYINFO] The following pattern is matched:
2021-07-29 19:45:30,799:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:30,801:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,801:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:30,801:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0x10549098), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:30,807:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,807:[MYINFO] Cost of subgraph : 0.410362
2021-07-29 19:45:30,807:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,807:[MYINFO] ---------------------------------------------
2021-07-29 19:45:30,807:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:30,807:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0x10549098), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:30,813:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:30,813:[MYINFO] Cost of subgraph : 0.440452
2021-07-29 19:45:30,813:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,063:[MYINFO] =============================================
2021-07-29 19:45:31,063:[MYINFO] (topo_order, op_type) : 104, nn.conv2d
2021-07-29 19:45:31,065:[MYINFO] The following pattern is matched:
2021-07-29 19:45:31,065:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:31,067:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,067:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:31,067:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0x10549098), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])
2021-07-29 19:45:31,072:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,073:[MYINFO] Cost of subgraph : 0.460337
2021-07-29 19:45:31,073:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,073:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,073:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:31,073:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0x10549098), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])
2021-07-29 19:45:31,079:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,079:[MYINFO] Cost of subgraph : 0.408445
2021-07-29 19:45:31,079:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,079:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,079:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:31,079:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 256, 1, 1], float32))], relay.attrs.Conv2DAttrs(0x10549098), [TensorType([1, 256, 56, 56], float32), TensorType([64, 256, 1, 1], float32)])
2021-07-29 19:45:31,084:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,085:[MYINFO] Cost of subgraph : 0.440779
2021-07-29 19:45:31,085:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,334:[MYINFO] =============================================
2021-07-29 19:45:31,335:[MYINFO] (topo_order, op_type) : 105, nn.relu
2021-07-29 19:45:31,336:[MYINFO] The following pattern is matched:
2021-07-29 19:45:31,337:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:31,338:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,338:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:31,338:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,339:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,340:[MYINFO] Cost of subgraph : 0.211548
2021-07-29 19:45:31,340:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,340:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,340:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:31,340:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,341:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,341:[MYINFO] Cost of subgraph : 0.149113
2021-07-29 19:45:31,341:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,345:[MYINFO] The following pattern is matched:
2021-07-29 19:45:31,345:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])])
2021-07-29 19:45:31,348:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,348:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:31,348:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,354:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,354:[MYINFO] Cost of subgraph : 0.432984
2021-07-29 19:45:31,355:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,355:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,355:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:31,355:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,361:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,361:[MYINFO] Cost of subgraph : 0.450268
2021-07-29 19:45:31,361:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,361:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,362:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:31,362:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,367:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,368:[MYINFO] Cost of subgraph : 0.432984
2021-07-29 19:45:31,368:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,368:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,368:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:31,368:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])], (nullptr), [TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,374:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,374:[MYINFO] Cost of subgraph : 0.450268
2021-07-29 19:45:31,374:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,760:[MYINFO] =============================================
2021-07-29 19:45:31,761:[MYINFO] (topo_order, op_type) : 106, add
2021-07-29 19:45:31,763:[MYINFO] The following pattern is matched:
2021-07-29 19:45:31,763:[MYINFO] CallPatternNode(Op(add), [*, *])
2021-07-29 19:45:31,764:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,765:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:31,765:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,766:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,766:[MYINFO] Cost of subgraph : 0.280274
2021-07-29 19:45:31,766:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,766:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,767:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:31,767:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,768:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,768:[MYINFO] Cost of subgraph : 0.213165
2021-07-29 19:45:31,768:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,768:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,768:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:31,769:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,770:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,770:[MYINFO] Cost of subgraph : 0.280274
2021-07-29 19:45:31,770:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,770:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,770:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:31,770:[MYINFO] CallNode(Op(add), default, [Var(data, default, ty=TensorType([1, 256, 56, 56], float32)), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,771:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,772:[MYINFO] Cost of subgraph : 0.213165
2021-07-29 19:45:31,772:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,776:[MYINFO] The following pattern is matched:
2021-07-29 19:45:31,776:[MYINFO] CallPatternNode(Op(add), [CallPatternNode(Op(nn.conv2d), [*, *]), *])
2021-07-29 19:45:31,778:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,778:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:31,778:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,784:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,784:[MYINFO] Cost of subgraph : 0.421271
2021-07-29 19:45:31,784:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,784:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,784:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:31,785:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,790:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,790:[MYINFO] Cost of subgraph : 0.449882
2021-07-29 19:45:31,790:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,790:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,791:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:31,791:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,796:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,796:[MYINFO] Cost of subgraph : 0.421271
2021-07-29 19:45:31,796:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,797:[MYINFO] ---------------------------------------------
2021-07-29 19:45:31,797:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:31,797:[MYINFO] CallNode(Op(add), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)]), Var(data, default, ty=TensorType([1, 256, 56, 56], float32))], (nullptr), [TensorType([1, 256, 56, 56], float32), TensorType([1, 256, 56, 56], float32)])
2021-07-29 19:45:31,802:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:31,802:[MYINFO] Cost of subgraph : 0.449882
2021-07-29 19:45:31,803:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,051:[MYINFO] =============================================
2021-07-29 19:45:32,051:[MYINFO] (topo_order, op_type) : 107, nn.conv2d
2021-07-29 19:45:32,053:[MYINFO] The following pattern is matched:
2021-07-29 19:45:32,053:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:32,055:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,055:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:32,055:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0x10d49218), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:32,060:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,061:[MYINFO] Cost of subgraph : 0.443471
2021-07-29 19:45:32,061:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,061:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,061:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:32,061:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0x10d49218), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:32,066:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,067:[MYINFO] Cost of subgraph : 0.383398
2021-07-29 19:45:32,067:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,067:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,067:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:32,067:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0x10d49218), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:32,072:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,072:[MYINFO] Cost of subgraph : 0.428923
2021-07-29 19:45:32,073:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,320:[MYINFO] =============================================
2021-07-29 19:45:32,321:[MYINFO] (topo_order, op_type) : 107, nn.conv2d
2021-07-29 19:45:32,322:[MYINFO] The following pattern is matched:
2021-07-29 19:45:32,322:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:32,324:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,324:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:32,324:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:32,330:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,330:[MYINFO] Cost of subgraph : 0.443471
2021-07-29 19:45:32,330:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,330:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,330:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:32,330:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:32,335:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,336:[MYINFO] Cost of subgraph : 0.383398
2021-07-29 19:45:32,336:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,336:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,336:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:32,336:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([256, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xc530398), [TensorType([1, 64, 56, 56], float32), TensorType([256, 64, 1, 1], float32)])
2021-07-29 19:45:32,341:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,341:[MYINFO] Cost of subgraph : 0.428923
2021-07-29 19:45:32,341:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,595:[MYINFO] =============================================
2021-07-29 19:45:32,596:[MYINFO] (topo_order, op_type) : 108, nn.relu
2021-07-29 19:45:32,597:[MYINFO] The following pattern is matched:
2021-07-29 19:45:32,598:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:32,599:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,599:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:32,599:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:32,600:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,601:[MYINFO] Cost of subgraph : 0.097449
2021-07-29 19:45:32,601:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,601:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,601:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:32,601:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:32,602:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,602:[MYINFO] Cost of subgraph : 0.050096
2021-07-29 19:45:32,602:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,605:[MYINFO] The following pattern is matched:
2021-07-29 19:45:32,605:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:32,607:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,607:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:32,607:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xeb2ae98), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:32,612:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,613:[MYINFO] Cost of subgraph : 0.494731
2021-07-29 19:45:32,613:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,613:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,613:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:32,613:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xeb2ae98), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:32,619:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,619:[MYINFO] Cost of subgraph : 0.417247
2021-07-29 19:45:32,619:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,868:[MYINFO] =============================================
2021-07-29 19:45:32,869:[MYINFO] (topo_order, op_type) : 109, nn.conv2d
2021-07-29 19:45:32,871:[MYINFO] The following pattern is matched:
2021-07-29 19:45:32,871:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:32,872:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,873:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:32,873:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xeb2ae98), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:32,878:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,878:[MYINFO] Cost of subgraph : 0.455319
2021-07-29 19:45:32,878:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,879:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,879:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:32,879:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xeb2ae98), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:32,884:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,884:[MYINFO] Cost of subgraph : 0.504273
2021-07-29 19:45:32,884:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,884:[MYINFO] ---------------------------------------------
2021-07-29 19:45:32,885:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:32,885:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 3, 3], float32))], relay.attrs.Conv2DAttrs(0xeb2ae98), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 3, 3], float32)])
2021-07-29 19:45:32,890:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:32,890:[MYINFO] Cost of subgraph : 0.416785
2021-07-29 19:45:32,890:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,139:[MYINFO] =============================================
2021-07-29 19:45:33,140:[MYINFO] (topo_order, op_type) : 110, nn.relu
2021-07-29 19:45:33,141:[MYINFO] The following pattern is matched:
2021-07-29 19:45:33,141:[MYINFO] CallPatternNode(Op(nn.relu), [*])
2021-07-29 19:45:33,143:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,143:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:33,143:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:33,144:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:33,144:[MYINFO] Cost of subgraph : 0.097449
2021-07-29 19:45:33,144:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,144:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,145:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:33,145:[MYINFO] CallNode(Op(nn.relu), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32))], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:33,146:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:33,146:[MYINFO] Cost of subgraph : 0.050096
2021-07-29 19:45:33,146:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,148:[MYINFO] The following pattern is matched:
2021-07-29 19:45:33,149:[MYINFO] CallPatternNode(Op(nn.relu), [CallPatternNode(Op(nn.conv2d), [*, *])])
2021-07-29 19:45:33,150:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,151:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:33,151:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe7f8e18), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 1, 1], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:33,156:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:33,156:[MYINFO] Cost of subgraph : 0.172850
2021-07-29 19:45:33,157:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,157:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,157:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:33,157:[MYINFO] CallNode(Op(nn.relu), default, [CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe7f8e18), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 1, 1], float32)])], (nullptr), [TensorType([1, 64, 56, 56], float32)])
2021-07-29 19:45:33,162:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:33,162:[MYINFO] Cost of subgraph : 0.121260
2021-07-29 19:45:33,163:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,416:[MYINFO] =============================================
2021-07-29 19:45:33,416:[MYINFO] (topo_order, op_type) : 111, nn.conv2d
2021-07-29 19:45:33,418:[MYINFO] The following pattern is matched:
2021-07-29 19:45:33,418:[MYINFO] CallPatternNode(Op(nn.conv2d), [*, *])
2021-07-29 19:45:33,420:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,420:[MYINFO] Subgraph to measure (target: cudnn):
2021-07-29 19:45:33,420:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe7f8e18), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 1, 1], float32)])
2021-07-29 19:45:33,425:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:33,426:[MYINFO] Cost of subgraph : 0.148675
2021-07-29 19:45:33,426:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,426:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,426:[MYINFO] Subgraph to measure (target: tensorrt):
2021-07-29 19:45:33,426:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe7f8e18), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 1, 1], float32)])
2021-07-29 19:45:33,431:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:33,431:[MYINFO] Cost of subgraph : 0.174148
2021-07-29 19:45:33,432:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,432:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,432:[MYINFO] Subgraph to measure (target: tvmgpu-autotvm):
2021-07-29 19:45:33,432:[MYINFO] CallNode(Op(nn.conv2d), default, [Var(data, default, ty=TensorType([1, 64, 56, 56], float32)), Var(weight, default, ty=TensorType([64, 64, 1, 1], float32))], relay.attrs.Conv2DAttrs(0xe7f8e18), [TensorType([1, 64, 56, 56], float32), TensorType([64, 64, 1, 1], float32)])
2021-07-29 19:45:33,437:[ERROR] REUSED RESULT!!!!
2021-07-29 19:45:33,437:[MYINFO] Cost of subgraph : 0.121047
2021-07-29 19:45:33,437:[MYINFO] ---------------------------------------------
2021-07-29 19:45:33,687:[MYINFO] =============================================
2021-07-29 19:45:33,687:[MYINFO] (topo_order, op_type) : 112, <class 'tvm.relay.expr.Var'>, Non-call node
2021-07-29 19:45:33,689:[MYINFO] Optimizer finished optimizing comp graph
2021-07-29 19:45:33,747:[MYINFO] Match result
2021-07-29 19:45:33,747:[MYINFO] 0
2021-07-29 19:45:33,747:[MYINFO] ('Var', '51-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,747:[MYINFO] 1
2021-07-29 19:45:33,747:[MYINFO] ('Const', '51-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,748:[MYINFO] 2
2021-07-29 19:45:33,748:[MYINFO] (Op(nn.conv2d), '51-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,748:[MYINFO] 3
2021-07-29 19:45:33,748:[MYINFO] (Op(nn.relu), '51-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,748:[MYINFO] 4
2021-07-29 19:45:33,748:[MYINFO] ('Const', '50-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,748:[MYINFO] 5
2021-07-29 19:45:33,748:[MYINFO] (Op(nn.conv2d), '50-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,748:[MYINFO] 6
2021-07-29 19:45:33,749:[MYINFO] (Op(nn.relu), '50-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,749:[MYINFO] 7
2021-07-29 19:45:33,749:[MYINFO] ('Const', '49-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,749:[MYINFO] 8
2021-07-29 19:45:33,749:[MYINFO] (Op(nn.conv2d), '49-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,749:[MYINFO] 9
2021-07-29 19:45:33,749:[MYINFO] ('Const', '0-tensorrt_conv2d')
2021-07-29 19:45:33,749:[MYINFO] 10
2021-07-29 19:45:33,750:[MYINFO] (Op(nn.conv2d), '0-tensorrt_conv2d')
2021-07-29 19:45:33,750:[MYINFO] 11
2021-07-29 19:45:33,750:[MYINFO] (Op(add), '49-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,750:[MYINFO] 12
2021-07-29 19:45:33,750:[MYINFO] (Op(nn.relu), '49-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,750:[MYINFO] 13
2021-07-29 19:45:33,750:[MYINFO] ('Const', '48-tensorrt_conv2d+relu')
2021-07-29 19:45:33,750:[MYINFO] 14
2021-07-29 19:45:33,751:[MYINFO] (Op(nn.conv2d), '48-tensorrt_conv2d+relu')
2021-07-29 19:45:33,751:[MYINFO] 15
2021-07-29 19:45:33,751:[MYINFO] (Op(nn.relu), '48-tensorrt_conv2d+relu')
2021-07-29 19:45:33,751:[MYINFO] 16
2021-07-29 19:45:33,751:[MYINFO] ('Const', '47-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,751:[MYINFO] 17
2021-07-29 19:45:33,751:[MYINFO] (Op(nn.conv2d), '47-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,751:[MYINFO] 18
2021-07-29 19:45:33,752:[MYINFO] (Op(nn.relu), '47-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,752:[MYINFO] 19
2021-07-29 19:45:33,752:[MYINFO] ('Const', '46-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,752:[MYINFO] 20
2021-07-29 19:45:33,752:[MYINFO] (Op(nn.conv2d), '46-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,752:[MYINFO] 21
2021-07-29 19:45:33,752:[MYINFO] (Op(add), '46-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,752:[MYINFO] 22
2021-07-29 19:45:33,752:[MYINFO] (Op(nn.relu), '46-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,752:[MYINFO] 23
2021-07-29 19:45:33,753:[MYINFO] ('Const', '45-tensorrt_conv2d+relu')
2021-07-29 19:45:33,753:[MYINFO] 24
2021-07-29 19:45:33,753:[MYINFO] (Op(nn.conv2d), '45-tensorrt_conv2d+relu')
2021-07-29 19:45:33,753:[MYINFO] 25
2021-07-29 19:45:33,753:[MYINFO] (Op(nn.relu), '45-tensorrt_conv2d+relu')
2021-07-29 19:45:33,753:[MYINFO] 26
2021-07-29 19:45:33,753:[MYINFO] ('Const', '44-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,753:[MYINFO] 27
2021-07-29 19:45:33,753:[MYINFO] (Op(nn.conv2d), '44-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,754:[MYINFO] 28
2021-07-29 19:45:33,754:[MYINFO] (Op(nn.relu), '44-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,754:[MYINFO] 29
2021-07-29 19:45:33,754:[MYINFO] ('Const', '43-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,754:[MYINFO] 30
2021-07-29 19:45:33,754:[MYINFO] (Op(nn.conv2d), '43-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,754:[MYINFO] 31
2021-07-29 19:45:33,754:[MYINFO] (Op(add), '43-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,754:[MYINFO] 32
2021-07-29 19:45:33,755:[MYINFO] (Op(nn.relu), '43-tensorrt_conv2d+add+relu')
2021-07-29 19:45:33,755:[MYINFO] 33
2021-07-29 19:45:33,755:[MYINFO] ('Const', '42-tensorrt_conv2d+relu')
2021-07-29 19:45:33,755:[MYINFO] 34
2021-07-29 19:45:33,755:[MYINFO] (Op(nn.conv2d), '42-tensorrt_conv2d+relu')
2021-07-29 19:45:33,755:[MYINFO] 35
2021-07-29 19:45:33,755:[MYINFO] (Op(nn.relu), '42-tensorrt_conv2d+relu')
2021-07-29 19:45:33,755:[MYINFO] 36
2021-07-29 19:45:33,755:[MYINFO] ('Const', '41-tensorrt_conv2d+relu')
2021-07-29 19:45:33,755:[MYINFO] 37
2021-07-29 19:45:33,756:[MYINFO] (Op(nn.conv2d), '41-tensorrt_conv2d+relu')
2021-07-29 19:45:33,756:[MYINFO] 38
2021-07-29 19:45:33,756:[MYINFO] (Op(nn.relu), '41-tensorrt_conv2d+relu')
2021-07-29 19:45:33,756:[MYINFO] 39
2021-07-29 19:45:33,756:[MYINFO] ('Const', '40-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,756:[MYINFO] 40
2021-07-29 19:45:33,756:[MYINFO] (Op(nn.conv2d), '40-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,756:[MYINFO] 41
2021-07-29 19:45:33,756:[MYINFO] ('Const', '1-tensorrt_conv2d')
2021-07-29 19:45:33,757:[MYINFO] 42
2021-07-29 19:45:33,757:[MYINFO] (Op(nn.conv2d), '1-tensorrt_conv2d')
2021-07-29 19:45:33,757:[MYINFO] 43
2021-07-29 19:45:33,757:[MYINFO] (Op(add), '40-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,757:[MYINFO] 44
2021-07-29 19:45:33,757:[MYINFO] (Op(nn.relu), '40-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,757:[MYINFO] 45
2021-07-29 19:45:33,757:[MYINFO] ('Const', '39-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,757:[MYINFO] 46
2021-07-29 19:45:33,757:[MYINFO] (Op(nn.conv2d), '39-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,758:[MYINFO] 47
2021-07-29 19:45:33,758:[MYINFO] (Op(nn.relu), '39-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,758:[MYINFO] 48
2021-07-29 19:45:33,758:[MYINFO] ('Const', '38-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,758:[MYINFO] 49
2021-07-29 19:45:33,758:[MYINFO] (Op(nn.conv2d), '38-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,758:[MYINFO] 50
2021-07-29 19:45:33,758:[MYINFO] (Op(nn.relu), '38-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,758:[MYINFO] 51
2021-07-29 19:45:33,759:[MYINFO] ('Const', '37-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,759:[MYINFO] 52
2021-07-29 19:45:33,759:[MYINFO] (Op(nn.conv2d), '37-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,759:[MYINFO] 53
2021-07-29 19:45:33,759:[MYINFO] (Op(add), '37-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,759:[MYINFO] 54
2021-07-29 19:45:33,759:[MYINFO] (Op(nn.relu), '37-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,759:[MYINFO] 55
2021-07-29 19:45:33,759:[MYINFO] ('Const', '36-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,760:[MYINFO] 56
2021-07-29 19:45:33,760:[MYINFO] (Op(nn.conv2d), '36-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,760:[MYINFO] 57
2021-07-29 19:45:33,760:[MYINFO] (Op(nn.relu), '36-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,760:[MYINFO] 58
2021-07-29 19:45:33,760:[MYINFO] ('Const', '35-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,760:[MYINFO] 59
2021-07-29 19:45:33,760:[MYINFO] (Op(nn.conv2d), '35-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,760:[MYINFO] 60
2021-07-29 19:45:33,760:[MYINFO] (Op(nn.relu), '35-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,761:[MYINFO] 61
2021-07-29 19:45:33,761:[MYINFO] ('Const', '34-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,761:[MYINFO] 62
2021-07-29 19:45:33,761:[MYINFO] (Op(nn.conv2d), '34-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,761:[MYINFO] 63
2021-07-29 19:45:33,761:[MYINFO] (Op(add), '34-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,761:[MYINFO] 64
2021-07-29 19:45:33,761:[MYINFO] (Op(nn.relu), '34-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,761:[MYINFO] 65
2021-07-29 19:45:33,762:[MYINFO] ('Const', '33-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,762:[MYINFO] 66
2021-07-29 19:45:33,762:[MYINFO] (Op(nn.conv2d), '33-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,762:[MYINFO] 67
2021-07-29 19:45:33,762:[MYINFO] (Op(nn.relu), '33-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,762:[MYINFO] 68
2021-07-29 19:45:33,762:[MYINFO] ('Const', '32-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,762:[MYINFO] 69
2021-07-29 19:45:33,762:[MYINFO] (Op(nn.conv2d), '32-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,763:[MYINFO] 70
2021-07-29 19:45:33,763:[MYINFO] (Op(nn.relu), '32-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,763:[MYINFO] 71
2021-07-29 19:45:33,763:[MYINFO] ('Const', '31-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,763:[MYINFO] 72
2021-07-29 19:45:33,763:[MYINFO] (Op(nn.conv2d), '31-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,763:[MYINFO] 73
2021-07-29 19:45:33,763:[MYINFO] (Op(add), '31-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,763:[MYINFO] 74
2021-07-29 19:45:33,763:[MYINFO] (Op(nn.relu), '31-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,764:[MYINFO] 75
2021-07-29 19:45:33,764:[MYINFO] ('Const', '30-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,764:[MYINFO] 76
2021-07-29 19:45:33,764:[MYINFO] (Op(nn.conv2d), '30-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,764:[MYINFO] 77
2021-07-29 19:45:33,764:[MYINFO] (Op(nn.relu), '30-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,764:[MYINFO] 78
2021-07-29 19:45:33,764:[MYINFO] ('Const', '29-tensorrt_conv2d+relu')
2021-07-29 19:45:33,764:[MYINFO] 79
2021-07-29 19:45:33,765:[MYINFO] (Op(nn.conv2d), '29-tensorrt_conv2d+relu')
2021-07-29 19:45:33,765:[MYINFO] 80
2021-07-29 19:45:33,765:[MYINFO] (Op(nn.relu), '29-tensorrt_conv2d+relu')
2021-07-29 19:45:33,765:[MYINFO] 81
2021-07-29 19:45:33,765:[MYINFO] ('Const', '28-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,765:[MYINFO] 82
2021-07-29 19:45:33,765:[MYINFO] (Op(nn.conv2d), '28-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,765:[MYINFO] 83
2021-07-29 19:45:33,765:[MYINFO] ('Const', '2-tensorrt_conv2d')
2021-07-29 19:45:33,765:[MYINFO] 84
2021-07-29 19:45:33,766:[MYINFO] (Op(nn.conv2d), '2-tensorrt_conv2d')
2021-07-29 19:45:33,766:[MYINFO] 85
2021-07-29 19:45:33,766:[MYINFO] (Op(add), '28-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,766:[MYINFO] 86
2021-07-29 19:45:33,766:[MYINFO] (Op(nn.relu), '28-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,766:[MYINFO] 87
2021-07-29 19:45:33,766:[MYINFO] ('Const', '27-tensorrt_conv2d+relu')
2021-07-29 19:45:33,766:[MYINFO] 88
2021-07-29 19:45:33,766:[MYINFO] (Op(nn.conv2d), '27-tensorrt_conv2d+relu')
2021-07-29 19:45:33,766:[MYINFO] 89
2021-07-29 19:45:33,767:[MYINFO] (Op(nn.relu), '27-tensorrt_conv2d+relu')
2021-07-29 19:45:33,767:[MYINFO] 90
2021-07-29 19:45:33,767:[MYINFO] ('Const', '26-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,767:[MYINFO] 91
2021-07-29 19:45:33,767:[MYINFO] (Op(nn.conv2d), '26-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,767:[MYINFO] 92
2021-07-29 19:45:33,767:[MYINFO] (Op(nn.relu), '26-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,767:[MYINFO] 93
2021-07-29 19:45:33,767:[MYINFO] ('Const', '25-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,768:[MYINFO] 94
2021-07-29 19:45:33,768:[MYINFO] (Op(nn.conv2d), '25-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,768:[MYINFO] 95
2021-07-29 19:45:33,768:[MYINFO] (Op(add), '25-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,768:[MYINFO] 96
2021-07-29 19:45:33,768:[MYINFO] (Op(nn.relu), '25-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,768:[MYINFO] 97
2021-07-29 19:45:33,768:[MYINFO] ('Const', '24-tensorrt_conv2d+relu')
2021-07-29 19:45:33,768:[MYINFO] 98
2021-07-29 19:45:33,768:[MYINFO] (Op(nn.conv2d), '24-tensorrt_conv2d+relu')
2021-07-29 19:45:33,769:[MYINFO] 99
2021-07-29 19:45:33,769:[MYINFO] (Op(nn.relu), '24-tensorrt_conv2d+relu')
2021-07-29 19:45:33,769:[MYINFO] 100
2021-07-29 19:45:33,769:[MYINFO] ('Const', '23-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,769:[MYINFO] 101
2021-07-29 19:45:33,769:[MYINFO] (Op(nn.conv2d), '23-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,769:[MYINFO] 102
2021-07-29 19:45:33,769:[MYINFO] (Op(nn.relu), '23-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,769:[MYINFO] 103
2021-07-29 19:45:33,770:[MYINFO] ('Const', '22-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,770:[MYINFO] 104
2021-07-29 19:45:33,770:[MYINFO] (Op(nn.conv2d), '22-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,770:[MYINFO] 105
2021-07-29 19:45:33,770:[MYINFO] (Op(add), '22-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,770:[MYINFO] 106
2021-07-29 19:45:33,770:[MYINFO] (Op(nn.relu), '22-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,770:[MYINFO] 107
2021-07-29 19:45:33,770:[MYINFO] ('Const', '21-tensorrt_conv2d+relu')
2021-07-29 19:45:33,771:[MYINFO] 108
2021-07-29 19:45:33,771:[MYINFO] (Op(nn.conv2d), '21-tensorrt_conv2d+relu')
2021-07-29 19:45:33,771:[MYINFO] 109
2021-07-29 19:45:33,771:[MYINFO] (Op(nn.relu), '21-tensorrt_conv2d+relu')
2021-07-29 19:45:33,771:[MYINFO] 110
2021-07-29 19:45:33,771:[MYINFO] ('Const', '20-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,771:[MYINFO] 111
2021-07-29 19:45:33,771:[MYINFO] (Op(nn.conv2d), '20-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,771:[MYINFO] 112
2021-07-29 19:45:33,771:[MYINFO] (Op(nn.relu), '20-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,772:[MYINFO] 113
2021-07-29 19:45:33,772:[MYINFO] ('Const', '19-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,772:[MYINFO] 114
2021-07-29 19:45:33,772:[MYINFO] (Op(nn.conv2d), '19-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,772:[MYINFO] 115
2021-07-29 19:45:33,772:[MYINFO] (Op(add), '19-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,772:[MYINFO] 116
2021-07-29 19:45:33,772:[MYINFO] (Op(nn.relu), '19-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,772:[MYINFO] 117
2021-07-29 19:45:33,772:[MYINFO] ('Const', '18-tensorrt_conv2d+relu')
2021-07-29 19:45:33,773:[MYINFO] 118
2021-07-29 19:45:33,773:[MYINFO] (Op(nn.conv2d), '18-tensorrt_conv2d+relu')
2021-07-29 19:45:33,773:[MYINFO] 119
2021-07-29 19:45:33,773:[MYINFO] (Op(nn.relu), '18-tensorrt_conv2d+relu')
2021-07-29 19:45:33,773:[MYINFO] 120
2021-07-29 19:45:33,773:[MYINFO] ('Const', '17-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,773:[MYINFO] 121
2021-07-29 19:45:33,773:[MYINFO] (Op(nn.conv2d), '17-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,773:[MYINFO] 122
2021-07-29 19:45:33,774:[MYINFO] (Op(nn.relu), '17-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,774:[MYINFO] 123
2021-07-29 19:45:33,774:[MYINFO] ('Const', '16-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,774:[MYINFO] 124
2021-07-29 19:45:33,774:[MYINFO] (Op(nn.conv2d), '16-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,774:[MYINFO] 125
2021-07-29 19:45:33,774:[MYINFO] (Op(add), '16-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,774:[MYINFO] 126
2021-07-29 19:45:33,774:[MYINFO] (Op(nn.relu), '16-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,775:[MYINFO] 127
2021-07-29 19:45:33,775:[MYINFO] ('Const', '15-tensorrt_conv2d+relu')
2021-07-29 19:45:33,775:[MYINFO] 128
2021-07-29 19:45:33,775:[MYINFO] (Op(nn.conv2d), '15-tensorrt_conv2d+relu')
2021-07-29 19:45:33,775:[MYINFO] 129
2021-07-29 19:45:33,775:[MYINFO] (Op(nn.relu), '15-tensorrt_conv2d+relu')
2021-07-29 19:45:33,775:[MYINFO] 130
2021-07-29 19:45:33,775:[MYINFO] ('Const', '14-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,775:[MYINFO] 131
2021-07-29 19:45:33,775:[MYINFO] (Op(nn.conv2d), '14-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,776:[MYINFO] 132
2021-07-29 19:45:33,776:[MYINFO] (Op(nn.relu), '14-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,776:[MYINFO] 133
2021-07-29 19:45:33,776:[MYINFO] ('Const', '13-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,776:[MYINFO] 134
2021-07-29 19:45:33,776:[MYINFO] (Op(nn.conv2d), '13-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,776:[MYINFO] 135
2021-07-29 19:45:33,776:[MYINFO] (Op(add), '13-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,776:[MYINFO] 136
2021-07-29 19:45:33,777:[MYINFO] (Op(nn.relu), '13-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,777:[MYINFO] 137
2021-07-29 19:45:33,777:[MYINFO] ('Const', '12-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,777:[MYINFO] 138
2021-07-29 19:45:33,777:[MYINFO] (Op(nn.conv2d), '12-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,777:[MYINFO] 139
2021-07-29 19:45:33,777:[MYINFO] (Op(nn.relu), '12-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,777:[MYINFO] 140
2021-07-29 19:45:33,777:[MYINFO] ('Const', '11-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,777:[MYINFO] 141
2021-07-29 19:45:33,778:[MYINFO] (Op(nn.conv2d), '11-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,778:[MYINFO] 142
2021-07-29 19:45:33,778:[MYINFO] (Op(nn.relu), '11-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,778:[MYINFO] 143
2021-07-29 19:45:33,778:[MYINFO] ('Const', '10-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,778:[MYINFO] 144
2021-07-29 19:45:33,778:[MYINFO] (Op(nn.conv2d), '10-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,778:[MYINFO] 145
2021-07-29 19:45:33,778:[MYINFO] ('Const', '3-cudnn_conv2d')
2021-07-29 19:45:33,779:[MYINFO] 146
2021-07-29 19:45:33,779:[MYINFO] (Op(nn.conv2d), '3-cudnn_conv2d')
2021-07-29 19:45:33,779:[MYINFO] 147
2021-07-29 19:45:33,779:[MYINFO] (Op(add), '10-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,779:[MYINFO] 148
2021-07-29 19:45:33,779:[MYINFO] (Op(nn.relu), '10-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,779:[MYINFO] 149
2021-07-29 19:45:33,779:[MYINFO] ('Const', '9-tensorrt_conv2d+relu')
2021-07-29 19:45:33,779:[MYINFO] 150
2021-07-29 19:45:33,779:[MYINFO] (Op(nn.conv2d), '9-tensorrt_conv2d+relu')
2021-07-29 19:45:33,780:[MYINFO] 151
2021-07-29 19:45:33,780:[MYINFO] (Op(nn.relu), '9-tensorrt_conv2d+relu')
2021-07-29 19:45:33,780:[MYINFO] 152
2021-07-29 19:45:33,780:[MYINFO] ('Const', '8-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,780:[MYINFO] 153
2021-07-29 19:45:33,780:[MYINFO] (Op(nn.conv2d), '8-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,780:[MYINFO] 154
2021-07-29 19:45:33,780:[MYINFO] (Op(nn.relu), '8-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,780:[MYINFO] 155
2021-07-29 19:45:33,780:[MYINFO] ('Const', '7-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,781:[MYINFO] 156
2021-07-29 19:45:33,781:[MYINFO] (Op(nn.conv2d), '7-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,781:[MYINFO] 157
2021-07-29 19:45:33,781:[MYINFO] (Op(add), '7-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,781:[MYINFO] 158
2021-07-29 19:45:33,781:[MYINFO] (Op(nn.relu), '7-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,781:[MYINFO] 159
2021-07-29 19:45:33,781:[MYINFO] ('Const', '6-tensorrt_conv2d+relu')
2021-07-29 19:45:33,781:[MYINFO] 160
2021-07-29 19:45:33,782:[MYINFO] (Op(nn.conv2d), '6-tensorrt_conv2d+relu')
2021-07-29 19:45:33,782:[MYINFO] 161
2021-07-29 19:45:33,782:[MYINFO] (Op(nn.relu), '6-tensorrt_conv2d+relu')
2021-07-29 19:45:33,782:[MYINFO] 162
2021-07-29 19:45:33,782:[MYINFO] ('Const', '5-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,782:[MYINFO] 163
2021-07-29 19:45:33,782:[MYINFO] (Op(nn.conv2d), '5-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,782:[MYINFO] 164
2021-07-29 19:45:33,782:[MYINFO] (Op(nn.relu), '5-tvmgpu-autotvm_conv2d+relu')
2021-07-29 19:45:33,782:[MYINFO] 165
2021-07-29 19:45:33,783:[MYINFO] ('Const', '4-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,783:[MYINFO] 166
2021-07-29 19:45:33,783:[MYINFO] (Op(nn.conv2d), '4-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,783:[MYINFO] 167
2021-07-29 19:45:33,783:[MYINFO] (Op(add), '4-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,783:[MYINFO] 168
2021-07-29 19:45:33,783:[MYINFO] (Op(nn.relu), '4-tvmgpu-autotvm_conv2d+add+relu')
2021-07-29 19:45:33,783:[MYINFO] Graph : conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d+relu-conv2d+relu-conv2d+add+relu-conv2d++-conv2d++++++-conv2d++++-conv2d+++-- (hash: 209652176)
2021-07-29 19:45:33,784:[MYINFO] Total Cost:29.30006603333335
2021-07-29 19:45:33,784:[MYINFO] Matched backend ops (op, cost)
2021-07-29 19:45:33,784:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.12)
2021-07-29 19:45:33,784:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.42)
2021-07-29 19:45:33,784:[MYINFO] (tensorrt_conv2d+add+relu, 0.43)
2021-07-29 19:45:33,784:[MYINFO] (tensorrt_conv2d+relu, 0.41)
2021-07-29 19:45:33,784:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.42)
2021-07-29 19:45:33,784:[MYINFO] (tensorrt_conv2d+add+relu, 0.43)
2021-07-29 19:45:33,784:[MYINFO] (tensorrt_conv2d+relu, 0.41)
2021-07-29 19:45:33,785:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.42)
2021-07-29 19:45:33,785:[MYINFO] (tensorrt_conv2d+add+relu, 0.43)
2021-07-29 19:45:33,785:[MYINFO] (tensorrt_conv2d+relu, 0.7)
2021-07-29 19:45:33,785:[MYINFO] (tensorrt_conv2d+relu, 0.94)
2021-07-29 19:45:33,785:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.44)
2021-07-29 19:45:33,785:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.41)
2021-07-29 19:45:33,785:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.49)
2021-07-29 19:45:33,785:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.44)
2021-07-29 19:45:33,785:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.41)
2021-07-29 19:45:33,785:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.49)
2021-07-29 19:45:33,786:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.44)
2021-07-29 19:45:33,786:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.41)
2021-07-29 19:45:33,786:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.49)
2021-07-29 19:45:33,786:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.44)
2021-07-29 19:45:33,786:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.73)
2021-07-29 19:45:33,786:[MYINFO] (tensorrt_conv2d+relu, 1.1)
2021-07-29 19:45:33,786:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.45)
2021-07-29 19:45:33,787:[MYINFO] (tensorrt_conv2d+relu, 0.51)
2021-07-29 19:45:33,787:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.48)
2021-07-29 19:45:33,787:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.45)
2021-07-29 19:45:33,787:[MYINFO] (tensorrt_conv2d+relu, 0.51)
2021-07-29 19:45:33,787:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.48)
2021-07-29 19:45:33,787:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.45)
2021-07-29 19:45:33,787:[MYINFO] (tensorrt_conv2d+relu, 0.51)
2021-07-29 19:45:33,788:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.48)
2021-07-29 19:45:33,788:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.45)
2021-07-29 19:45:33,788:[MYINFO] (tensorrt_conv2d+relu, 0.51)
2021-07-29 19:45:33,788:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.48)
2021-07-29 19:45:33,788:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.45)
2021-07-29 19:45:33,788:[MYINFO] (tensorrt_conv2d+relu, 0.51)
2021-07-29 19:45:33,789:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.48)
2021-07-29 19:45:33,789:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.45)
2021-07-29 19:45:33,789:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.88)
2021-07-29 19:45:33,789:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 1.5)
2021-07-29 19:45:33,789:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.61)
2021-07-29 19:45:33,790:[MYINFO] (tensorrt_conv2d+relu, 0.59)
2021-07-29 19:45:33,790:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.54)
2021-07-29 19:45:33,790:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.61)
2021-07-29 19:45:33,790:[MYINFO] (tensorrt_conv2d+relu, 0.59)
2021-07-29 19:45:33,791:[MYINFO] (tvmgpu-autotvm_conv2d+relu, 0.54)
2021-07-29 19:45:33,791:[MYINFO] (tvmgpu-autotvm_conv2d+add+relu, 0.61)
2021-07-29 19:45:33,791:[MYINFO] (cudnn_conv2d, 1.2)
2021-07-29 19:45:33,791:[MYINFO] (tensorrt_conv2d, 0.91)
2021-07-29 19:45:33,791:[MYINFO] (tensorrt_conv2d, 0.74)
2021-07-29 19:45:33,791:[MYINFO] (tensorrt_conv2d, 0.38)
2021-07-29 19:45:33,791:[MYINFO] ----------------------------------------
2021-07-29 19:45:34,179:[MYINFO] [Python side] Op-level optimization is done
2021-07-29 19:45:34,327:[MYINFO] # of matched operators from first level : 52
2021-07-29 19:45:34,328:[MYINFO] # of matched operators from first level after excluding unnecessary ops: 34
2021-07-29 19:45:34,328:[ERROR] Network name: resnet50
2021-07-29 19:45:34,392:[ERROR] Log is saved to /home/fleetadmin/soo/tvm/python/tvm/relay/transform/backend_operator/../logs/best_match_resnet50_jetson_op_level.log
2021-07-29 19:45:34,445:[ERROR] Log is saved to /home/fleetadmin/soo/tvm/python/tvm/relay/transform/backend_operator/../logs/user_defined_match_resnet50_jetson.log
2021-07-29 19:45:41,470:[ERROR] (Loaded network, Shape array) = (resnet50, [('input0', [1, 64, 56, 56])])
2021-07-29 19:45:41,480:[ERROR] Starting evolutionary search
2021-07-29 19:45:41,480:[ERROR] [Evaluation] Individual: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
2021-07-29 19:45:41,533:[ERROR] Log is saved to /home/fleetadmin/soo/tvm/python/tvm/relay/transform/backend_operator/../logs/user_defined_match_resnet50_jetson.log
2021-07-29 19:47:18,967:[ERROR] Measurement time : 97.48s
2021-07-29 19:47:18,975:[ERROR] [Evaluation] Individual: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
2021-07-29 19:47:19,087:[ERROR] Log is saved to /home/fleetadmin/soo/tvm/python/tvm/relay/transform/backend_operator/../logs/user_defined_match_resnet50_jetson.log
2021-07-29 19:48:30,020:[ERROR] Measurement time : 71.04s
2021-07-29 19:48:30,021:[ERROR] [Evaluation] Individual: [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1]
2021-07-29 19:48:30,092:[ERROR] Log is saved to /home/fleetadmin/soo/tvm/python/tvm/relay/transform/backend_operator/../logs/user_defined_match_resnet50_jetson.log
2021-07-29 19:50:30,741:[ERROR] Measurement time : 120.72s
2021-07-29 19:50:30,742:[ERROR] [Evaluation] Individual: [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1]
2021-07-29 19:50:30,815:[ERROR] Log is saved to /home/fleetadmin/soo/tvm/python/tvm/relay/transform/backend_operator/../logs/user_defined_match_resnet50_jetson.log
2021-07-29 19:52:11,224:[ERROR] Measurement time : 100.48s
2021-07-29 19:52:11,225:[ERROR] [Evaluation] Individual: [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1]
2021-07-29 19:52:11,308:[ERROR] Log is saved to /home/fleetadmin/soo/tvm/python/tvm/relay/transform/backend_operator/../logs/user_defined_match_resnet50_jetson.log
